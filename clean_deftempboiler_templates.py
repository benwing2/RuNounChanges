#!/usr/bin/env python
# -*- coding: utf-8 -*-

import pywikibot, re, sys, codecs, argparse

import blib
from blib import getparam, rmparam, msg, site, tname

deftempboiler_templates = [
  "abbreviation of",
  "acronym of",
  "archaic form of",
  "archaic spelling of",
  "aspirate mutation of",
  "bg-pre-reform",
  "ceb-superseded spelling of",
  "clipping of",
  "contraction of",
  "dated form of",
  "dated spelling of",
  "deliberate misspelling of",
  "eclipsis of",
  "eggcorn of",
  "egy-alt",
  "egy-alternative transliteration of",
  "elongated form of",
  "en-ing form of",
  "euphemistic form of",
  "euphemistic spelling of",
  "former name of",
  "fr-post-1990",
  "fr-pre-1990",
  "hard mutation of",
  "hy-reformed",
  "informal form of",
  "informal spelling of",
  "initialism of",
  "jbo-rafsi of",
  "lenition of",
  "misromanization of",
  "misspelling of",
  "mixed mutation of",
  "morse code abbreviation",
  "morse code for",
  "morse code prosign",
  "mutation of",
  "my-ICT of",
  "nasal mutation of",
  "nomen sacrum form of",
  "nonstandard form of",
  "nonstandard spelling of",
  "obsolete form of",
  "official form of",
  "rare form of",
  "rare spelling of",
  "ru-abbrev of",
  "ru-acronym of",
  "ru-clipping of",
  "ru-initialism of",
  "ru-pre-reform",
  "short for",
  "soft mutation of",
  "standard form of",
  "standard spelling of",
  "superseded spelling of",
  "uk-pre-reform",
  "uncommon form of",
  "uncommon spelling of",
  "yi-alternatively pointed form of",
  "yi-phonetic spelling of",
  "yi-unpointed form of",
  #"ga-lenition of",
  u"be-Taraškievica",
  u"pt-superseded-paroxytone-éi",
  u"pt-superseded-paroxytone-ói",
]

new_lang_form_of_templates = [
  "new ca plural",
  "new de genitive",
  "new de plural",
  "new en adj attr bot",
  "new en alternative form",
  "new en alternative spelling",
  "new en compar",
  "new en plural bot",
  "new en plural third bot",
  "new en plural",
  "new en pres part",
  "new en superl bot",
  "new en verb past part",
  "new en verb past",
  "new en verb pres part",
  "new frm plural",
  "new it plural",
  "new oc plural",
]

form_of_templates = [
  "abessive plural of",
  "abessive singular of",
  "abstract noun of",
  "accusative of",
  "accusative plural of",
  "accusative singular of",
  "active participle of",
  "agent noun of",
  "alternative case form of",
  "alternative form of",
  "alternative plural of",
  "alternative reconstruction of",
  "alternative spelling of",
  "alternative typography of",
  "ancient form of",
  "aphetic form of",
  "apocopic form of",
  "ar-act-participle",
  "ar-adj-inf-def",
  "ar-noun-inf-cons",
  "ar-noun-pl-coll-cons",
  "ar-pass-participle",
  "ar-verb-form",
  "ar-verbal noun of",
  "associative plural of",
  "associative singular of",
  "attributive form of",
  "augmentative of",
  "bg-adjective extended of",
  "bg-adjective feminine definite of",
  "bg-adjective feminine indefinite of",
  "bg-adjective masculine definite object of",
  "bg-adjective masculine definite subject of",
  "bg-adjective neuter definite of",
  "bg-adjective neuter indefinite of",
  "bg-adjective plural definite of",
  "bg-adjective plural indefinite of",
  "bg-plural count of",
  "bg-singular definite object form of",
  "bg-singular definite subject form of",
  "blk-past of",
  "broad form of",
  "causative of",
  "combining form of",
  "comitative plural of",
  "comitative singular of",
  "comparative of",
  "comparative plural of",
  "comparative singular of",
  "cs-imperfective form of",
  "cu-Glag spelling of",
  "da-pl-genitive",
  "dative dual of",
  "dative of",
  "dative plural definite of",
  "dative plural indefinite of",
  "dative plural of",
  "dative singular of",
  "de-du contraction",
  "de-inflected form of",
  "definite of",
  "distributive plural of",
  "distributive singular of",
  "dual of",
  "e-form of",
  "early form of",
  "egy-verb form of",
  "el-comp-form-of",
  "el-form-of-verb",
  "el-super-form-of",
  "elative of",
  "ellipsis of",
  "en-archaic second-person singular of",
  "en-comparative of",
  "en-irregular plural of",
  "en-past of",
  "en-simple past of",
  "en-superlative of",
  "equative of",
  "exclusive plural of",
  "exclusive singular of",
  "female form of",
  "feminine noun of",
  "feminine of",
  "feminine plural of",
  "feminine plural past participle of",
  "feminine singular of",
  "feminine singular past participle of",
  "form of",
  "frequentative of",
  "future participle of",
  "fy-NPL",
  "fy-noun-entry-pl",
  "ga-emphatic of",
  "ga-lenition of",
  "genitive of",
  "genitive plural definite of",
  "genitive plural indefinite of",
  "genitive plural of",
  "genitive singular definite of",
  "genitive singular indefinite of",
  "genitive singular of",
  "gerund of",
  "harmonic variant of",
  "honorific alternative case form of",
  "hu-exaggerated of",
  "hy-traditional",
  "ia-form of",
  "ie-past and pp of",
  "imperative of",
  "imperfective form of",
  "inflected form of",
  "inflection of",
  "iterative of",
  "ja-new/r",
  "ja-past of verb",
  "ja-romaji",
  "ja-romanization of",
  "ja-te form of verb",
  "ja-verb form of",
  u"kyūjitai spelling of",
  "la-comp-form",
  "la-part-form",
  "late form of",
  "lb-inflected form of",
  "masculine animate plural past participle of",
  "masculine inanimate plural past participle of",
  "masculine noun of",
  "masculine of",
  "masculine plural of",
  "masculine plural past participle of",
  "masculine singular past participle of",
  "medieval spelling of",
  "men's speech form of",
  "misconstruction of",
  "mn-verb form of",
  "monotonic form of",
  "negative of",
  "neuter plural of",
  "neuter plural past participle of",
  "neuter singular of",
  "neuter singular past participle of",
  "nominalization of",
  "nominative plural of",
  "nominative singular of",
  "nuqtaless form of",
  "oblique plural of",
  "oblique singular of",
  "obsolete spelling of",
  "obsolete typography of",
  "participle of",
  "passive of",
  "passive participle of",
  "passive past tense of",
  "past active participle of",
  "past participle of",
  "past passive participle of",
  "past tense of",
  "paucal of",
  "pejorative of",
  "perfect participle of",
  "perfective form of",
  "plural definite of",
  "plural indefinite of",
  "plural of",
  "present active participle of",
  "present participle of",
  "present tense of",
  "pt-cardinal form of",
  "pt-pronoun-with-l",
  "pt-pronoun-with-n",
  "reflexive of",
  "rfform",
  "ro-adj-form of",
  "ru-alt-ё",
  "ru-participle of",
  "sa-desiderative of",
  "sa-frequentative of",
  "sa-root form of",
  "sce-verb form of",
  "sco-past of",
  "sco-simple past of",
  "second-person singular of",
  "second-person singular past of",
  "sga-verbnec of",
  "singular definite of",
  "singular of",
  "singulative of",
  "sino-vietnamese reading of",
  "slender form of",
  "spelling of",
  "substantivisation of",
  "superlative attributive of",
  "superlative of",
  "superlative predicative of",
  "supine of",
  "syncopic form of",
  "synonym of",
  "term-label",
  "terminative plural of",
  "terminative singular of",
  "ug-latin",
  "ug-uly of",
  "ug-uyy of",
  "ux",
  "uxi",
  "verbal noun of",
  "vocative plural of",
  "vocative singular of",
  "yi-inflected form of",
  "za-sawndip form of",
]

manual_templates = ["eye dialect of", "ja-form of", "jyutping reading of",
    "polytonic form of", "pronunciation spelling of", "spelling of"]

def process_page(page, index, parsed):
  pagetitle = unicode(page.title())
  def pagemsg(txt):
    msg("Page %s %s: %s" % (index, pagetitle, txt))

  pagemsg("Processing")
  notes = []

  for t in parsed.filter_templates():
    origt = unicode(t)
    tn = tname(t)
    if tn in deftempboiler_templates:
      cap = getparam(t, "cap")
      if cap:
        if cap == tn[0]:
          t.add("nocap", "1")
          notes.append("convert cap=%s to nocap=1 in {{%s}}" % (cap, tn))
        else:
          notes.append("remove unnecessary cap=%s in {{%s}}" % (cap, tn))
        rmparam(t, "cap")
      if t.has("dot") and not getparam(t, "dot"):
        rmparam(t, "dot")
        t.add("nodot", "1")
        notes.append("convert empty dot= to nodot=1 in {{%s}}" % tn)

    if unicode(t) != origt:
      pagemsg("Replaced <%s> with <%s>" % (origt, unicode(t)))

  return unicode(parsed), notes

parser = blib.create_argparser("Convert cap= to nocap= and empty dot= to nodot= in templates based on {{deftempboiler}}")
args = parser.parse_args()
start, end = blib.parse_start_end(args.start, args.end)

for template in ["egy-alt"]:
  msg("Processing references to Template:%s" % template)
  for i, page in blib.references("Template:%s" % template, start, end):
    blib.do_edit(page, i, process_page, save=args.save, verbose=args.verbose)
