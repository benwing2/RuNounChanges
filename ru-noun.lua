<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" />
<title>Editing Module:ru-noun - Wiktionary</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({"wgCanonicalNamespace":"Module","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":828,"wgPageName":"Module:ru-noun","wgTitle":"ru-noun","wgCurRevisionId":34263593,"wgRevisionId":0,"wgArticleId":4210008,"wgIsArticle":!1,"wgIsRedirect":!1,"wgAction":"edit","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":!0,"wgPageContentLanguage":"en","wgPageContentModel":"Scribunto","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Module:ru-noun","wgRelevantArticleId":4210008,"wgIsProbablyEditable":!0,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgMediaViewerOnClick":!0,"wgMediaViewerEnabledByDefault":!0,"wgWikiEditorEnabledModules":{"toolbar":!0,
"dialogs":!0,"preview":!1,"publish":!1},"wgBetaFeaturesFeatures":[],"wgCodeEditorCurrentLanguage":"lua","wgULSAcceptLanguageList":[],"wgULSCurrentAutonym":"English","wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgNoticeProject":"wiktionary","wgEditMessage":"editing"});mw.loader.implement("user.options",function($,jQuery){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function($,jQuery){mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\"});});mw.loader.load(["mediawiki.action.edit","mediawiki.toolbar","mediawiki.page.startup","mediawiki.legacy.wikibits","ext.centralauth.centralautologin","ext.uls.init","ext.uls.interface","ext.centralNotice.bannerController","skins.vector.js"]);
} );</script>
<link rel="stylesheet" href="https://en.wiktionary.org/w/load.php?debug=false&amp;lang=en&amp;modules=ext.uls.nojs%7Cmediawiki.action.edit.styles%7Cmediawiki.legacy.shared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cmediawiki.ui.button%7Cskins.vector.styles&amp;only=styles&amp;skin=vector&amp;*" />
<link rel="stylesheet" href="https://en.wiktionary.org/w/load.php?debug=false&amp;lang=en&amp;modules=ext.wikiEditor.toolbar.styles&amp;only=styles&amp;skin=vector&amp;*" />
<link rel="stylesheet" href="https://en.wiktionary.org/w/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint&amp;only=styles&amp;skin=vector&amp;*" media="print" />
<meta name="ResourceLoaderDynamicStyles" content="" />
<link rel="stylesheet" href="https://en.wiktionary.org/w/load.php?debug=false&amp;lang=en&amp;modules=site&amp;only=styles&amp;skin=vector&amp;*" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}</style>
<script async="" src="https://en.wiktionary.org/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector&amp;*"></script>
<meta name="generator" content="MediaWiki 1.26wmf19" />
<meta name="robots" content="noindex,nofollow" />
<link rel="alternate" type="application/x-wiki" title="Edit" href="/w/index.php?title=Module:ru-noun&amp;action=edit" />
<link rel="edit" title="Edit" href="/w/index.php?title=Module:ru-noun&amp;action=edit" />
<link rel="apple-touch-icon" href="/static/apple-touch/wiktionary/en.png" />
<link rel="shortcut icon" href="/static/favicon/wiktionary/en.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wiktionary (en)" />
<link rel="EditURI" type="application/rsd+xml" href="//en.wiktionary.org/w/api.php?action=rsd" />
<link rel="copyright" href="//creativecommons.org/licenses/by-sa/3.0/" />
<link rel="alternate" type="application/atom+xml" title="Wiktionary Atom feed" href="/w/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="canonical" href="https://en.wiktionary.org/wiki/Module:ru-noun" />
<link rel="dns-prefetch" href="//meta.wikimedia.org" />
<!--[if lt IE 7]><style type="text/css">body{behavior:url("/w/static/1.26wmf19/skins/Vector/csshover.min.htc")}</style><![endif]-->
</head>
<body class="mediawiki ltr sitedir-ltr ns-828 ns-subject page-Module_ru-noun skin-vector action-edit">
		<div id="mw-page-base" class="noprint"></div>
		<div id="mw-head-base" class="noprint"></div>
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>

							<div id="siteNotice"><!-- CentralNotice --></div>
						<div class="mw-indicators">
</div>
			<h1 id="firstHeading" class="firstHeading" lang="en">Editing Module:ru-noun</h1>
									<div id="bodyContent" class="mw-body-content">
								<div id="contentSub"></div>
												<div id="jump-to-nav" class="mw-jump">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
				</div>
				<div id="mw-content-text"><div class="mw-editnotice mw-editnotice-namespace mw-editnotice-828"><div style="border: 2px solid green; padding: 0.25em 0.75em; margin: 1em 0;" class="">
<p>When editing modules, please take note of our <a href="/wiki/Wiktionary:Coding_conventions" title="Wiktionary:Coding conventions">module coding conventions</a>.
</p>
<hr /><p class="plainlinks" style="font-size: smaller;">Documentation: <a href="//www.mediawiki.org/wiki/Extension:Scribunto/Lua_reference_manual" class="extiw" title="mw:Extension:Scribunto/Lua reference manual">Scribunto</a> &#8226; <a rel="nofollow" class="external text" href="http://lua.org/manual/5.1">Lua 5.1</a><br/>Source code: <a class="external text" href="//git.wikimedia.org/tree/mediawiki%2Fextensions%2FScribunto/HEAD/">Scribunto</a>
</div>
</div><div id="mw-anon-edit-warning">
<p><span class="plainlinks">You are not logged in. If you save your edits to this page, your IP address will be recorded in <a class="external text" href="//en.wiktionary.org/w/index.php?title=Module:ru-noun&amp;action=history">the page's history</a>. For that and <a href="/wiki/Wiktionary:Why_create_an_account%3F" title="Wiktionary:Why create an account?">other reasons</a>, you should <a class="external text" href="//en.wiktionary.org/w/index.php?title=Special:Userlogin&amp;type=signup">create an account</a>.</span>
</p><p><b>Please do not save test edits. If you want to experiment, please use the <a href="/wiki/Wiktionary:Sandbox" title="Wiktionary:Sandbox">sandbox</a>.</b> Inserting nonsense, knowingly adding false information and gratuitously removing content are considered <a href="/wiki/Wiktionary:Vandalism" title="Wiktionary:Vandalism">vandalism</a>, and editors who engage in such behavior may be <a href="/wiki/Wiktionary:Blocking_policy" title="Wiktionary:Blocking policy">blocked</a> without a warning.
</p>
</div>
<div id="wikiPreview" class="ontop" style="display: none;"><div lang="en" dir="ltr" class="mw-content-ltr"></div></div><form id="editform" name="editform" method="post" action="/w/index.php?title=Module:ru-noun&amp;action=submit" enctype="multipart/form-data"><div id="antispam-container" style="display: none;"><label for="wpAntiSpam">Anti-spam check.
Do <strong>not</strong> fill this in!</label><input type="text" name="wpAntispam" id="wpAntispam" value="" /></div><input type='hidden' value="" name="wpSection"/>
<input type='hidden' value="20150826113355" name="wpStarttime" />
<input type='hidden' value="20150826080543" name="wpEdittime" />
<input type='hidden' value="" name="wpScrolltop" id="wpScrolltop" />
<input type="hidden" value="d41d8cd98f00b204e9800998ecf8427e" name="wpAutoSummary" /><input type="hidden" value="0" name="oldid" /><input type="hidden" value="34263593" name="parentRevId" /><input type="hidden" value="text/plain" name="format" /><input type="hidden" value="Scribunto" name="model" /><div class="wikiEditor-oldToolbar"><div id="toolbar"></div></div><textarea tabindex="1" accesskey="," id="wpTextbox1" cols="80" rows="25" style="" lang="en" dir="ltr" name="wpTextbox1">--[=[
	This module contains functions for creating inflection tables for Russian
	nouns.

	Arguments:
		1: stress pattern number, or multiple numbers separated by commas
		2: stem
		3: declension type (usually just the ending)
		4: suffixless form (optional, default = stem)
		a: animacy (a = animate, i = inanimate, b = both, otherwise inanimate)
		n: number restriction (p = plural only, s = singular only, otherwise both)
		pl: special plural stem (optional, default = stem)
		barepl: suffixless plural stem (optional, default = argument 4 if explicitly given, else plural stem)

	Case abbreviations:
		nom: nominative
		gen: genitive
		dat: dative
		acc: accusative
		ins: instrumental
		pre: prepositional
		par: partitive
		loc: locative
		voc: vocative
]=]--

local m_utilities = require("Module:utilities")
local ut = require("Module:utils")
local m_links = require("Module:links")
local com = require("Module:ru-common")
local strutils = require("Module:string utilities")
local m_table_tools = require("Module:table tools")
local m_debug = require("Module:debug")

local export = {}

local lang = require("Module:languages").getByCode("ru")

local u = mw.ustring.char
local rfind = mw.ustring.find
local rsubn = mw.ustring.gsub
local rmatch = mw.ustring.match
local rsplit = mw.text.split
local ulower = mw.ustring.lower
local usub = mw.ustring.sub

local AC = u(0x0301) -- acute =  ÃÅ

-- version of rsubn() that discards all but the first return value
local function rsub(term, foo, bar)
	local retval = rsubn(term, foo, bar)
	return retval
end

function track(page)
	m_debug.track("ru-noun/" .. page)
	return true
end

-- Old-style declensions.
local declensions_old = {}
-- New-style declensions; computed automatically from the old-style ones.
local declensions = {}
-- Auto-detection functions, old-style, for a given input declension.
-- It is passed two params, (stressed) STEM and STRESS_PATTERN, and should
-- return the ouput declension.
local detect_decl_old = {}
-- Auto-detection functions, new style; computed automatically from the
-- old-style ones.
local detect_decl = {}
local sibilant_suffixes = {}
local stress_patterns = {}
-- Set of patterns with stressed genitive plural.
local stressed_gen_pl_patterns = {}
-- Set of patterns with stressed prepositional singular.
local stressed_pre_sg_patterns = {}
-- List of all cases, excluding loc/par/voc.
local decl_cases
-- List of all cases, including loc/par/voc.
local cases
-- Type of trailing letter, for tracking purposes
local trailing_letter_type

local function tracking_code(stress_arg, stress, decl_class,
		real_decl_class, args)
	decl_class = decl_class or ""
	real_decl_class = real_decl_class or ""
	local hint = ulower(usub(com.remove_accents(args.stem), -1))
	local hint_type_list = trailing_letter_type[hint] or {"hard-cons", "cons"}
	if real_decl_class == decl_class then
		real_decl_class = nil
	end
	local function dotrack(prefix)
		-- unclear if this is needed: track("stress/" .. stress_arg)
		track(stress)
		track(decl_class)
		track(decl_class .. "/" .. stress)
		if real_decl_class then
			track(real_decl_class)
			track(real_decl_class .. "/" .. stress)
		end
		for _, hint_type in ipairs(hint_type_list) do
			track(hint_type)
			track(decl_class .. "/" .. hint_type)
			if real_decl_class then
				track(real_decl_class .. "/" .. hint_type)
			end
		end
		if args.pl ~= args.stem then
			track("irreg-pl")
		end
	end
	dotrack("")
	if args.bare ~= args.stem then
		track("reducible-stem")
		dotrack("reducible-stem/")
	end
	if rfind(args.stem, "–∏ÃÅ?–Ω$") and (decl_class == "" or decl_class == "-") then
		track("irregular-in")
	end
	if rfind(args.stem, "[–µ—ë–æ]ÃÅ?–Ω–æ–∫$") and (decl_class == "" or decl_class == "-") then
		track("irregular-onok")
	end
	if args.pltail then
		track("pltail")
	end
	if args.sgtail then
		track("sgtail")
	end
	for case in pairs(cases) do
		if args[case] then
			track("irreg/" .. case)
			-- questionable use: dotrack("irreg/" .. case .. "/")
		end
	end
end

local function do_show(frame, old)
	PAGENAME = mw.title.getCurrentTitle().text
	SUBPAGENAME = mw.title.getCurrentTitle().subpageText
	NAMESPACE = mw.title.getCurrentTitle().nsText

	local args = {}
	--Clone parent's args while also assigning nil to empty strings.
	for pname, param in pairs(frame:getParent().args) do
		if param == "" then args[pname] = nil
		else args[pname] = param
		end
	end

	-- FIXME: Eliminate barepl, convert pl to 5th numbered arg
	if args["barepl"] or args["barepl2"] or args["barepl3"] or args["barepl4"] or args["barepl5"] then
		track("barepl")
	end
	if args["pl"] or args["pl2"] or args["pl3"] or args["pl4"] or args["pl5"] then
		track("pl")
	end
	
	-- Gather arguments into an array of STEM_SET objects, containing
	-- (potentially) elements 1, 2, 3, 4, 'pl', 'barepl' where 1, 2, 3, 4
	-- correspond to stress pattern, stem, declension type and bare stem and
	-- come from consecutive numbered parameters, and 'pl' and 'barepl' come
	-- from parameters named 'pl', 'pl2', 'pl3', ... and similarly for
	-- 'barepl'. Sets of stem parameters are separated by the word "or".
	local stem_sets = {}
	-- Find maximum-numbered arg, allowing for holes
	local max_arg = 0
	for k, v in pairs(args) do
		if type(k) == "number" and k > max_arg then
			max_arg = k
		end
	end
	-- Now gather the arguments.
	local offset = 0
	local stem_set = {}
	for i=1,(max_arg + 1) do
		if args[i] == "or" or i == max_arg + 1 then
			local setnum = #stem_sets + 1
			stem_set.pl = args["pl" .. (setnum == 1 and "" or setnum)]
			stem_set.barepl = args["barepl" .. (setnum == 1 and "" or setnum)]
			table.insert(stem_sets, stem_set)
			stem_set = {}
			offset = i
		else
			stem_set[i - offset] = args[i]
		end
	end
	-- Gather any remaining stem specs composed only of plN and/or bareplN.
	i = #stem_sets + 1
	assert(i > 1)
	while true do
		local pl = args["pl" .. i]
		local barepl = args["barepl" .. i]
		if not pl and not barepl then
			break
		end
		table.insert(stem_sets, {pl=pl, barepl=barepl})
		i = i + 1
	end

	-- Initialize non-stem-specific arguments.
	args.a = args.a and string.sub(args.a, 1, 1) or "i"
	args.n = args.n and string.sub(args.n, 1, 1) or nil
	args.forms = {}
	args.old = old
	-- HACK: Escape * at beginning of line so it doesn't show up
	-- as a list entry. Many existing templates use * for footnotes.
	-- FIXME: We should maybe do this in {{ru-decl-noun}} instead.
	if args.notes then
		args.notes = rsub(args.notes, "^%*", "&amp;#42;")
	end

	local decls = old and declensions_old or declensions
	local detectfuns = old and detect_decl_old or detect_decl

	-- Default arguments. After the first stem set is processed, we set the
	-- defaults based on that set.
	local default_stress = "1"
	local default_decl = ""
	local default_stem = SUBPAGENAME
	local default_bare, default_pl, default_barepl
	local first = true

	if #stem_sets > 1 then
		track("multiple-stems")
	end

	for _, stem_set in ipairs(stem_sets) do
		local stress_arg = stem_set[1] or default_stress
		local decl_class = stem_set[3] or default_decl
		local stem_specified = stem_set[2] or first
		args.stem = stem_set[2] or default_stem
		if ut.contains({"", "m", "f", "n"}, decl_class) then
			args.stem, decl_class = detect_stem_type(args.stem, decl_class)
		end
		-- For bare, pl and barepl, we default to other specified arguments,
		-- falling back to the stem if specified or we're handling the
		-- first stem set; as a last resort, use the defaults taken from the
		-- first stem set.
		args.bare = stem_set[4] or stem_specified and args.stem or default_bare
		args.pl = stem_set.pl or stem_specified and args.stem or default_pl
		args.barepl = stem_set.barepl or stem_set[4] or stem_set.pl or
			stem_specified and args.stem or default_barepl
		if first then
			default_stress = stress_arg
			default_decl = decl_class
			default_stem = args.stem
			default_bare = args.bare
			default_pl = args.pl
			default_barepl = args.barepl
		end
		args.ustem = com.make_unstressed_once(args.stem)
		-- unused: args.ubare = com.make_unstressed_once(args.bare)
		args.upl = com.make_unstressed_once(args.pl)
		-- unused: args.ubarepl = com.make_unstressed_once(args.barepl)
		args.hint = ulower(usub(args.stem, -1))

		if rfind(stress_arg, ",") then
			track("multiple-stress-patterns")
		end

		-- Loop over stress patterns in case more than one given.
		for _, stress in ipairs(rsplit(stress_arg, ",")) do
			if not stress_patterns[stress] then
				error("Unrecognized stress pattern " .. stress)
			end
			local sub_decl_classes
			-- Loop over declension classes (we may have two of them, one for
			-- singular and one for plural, in the case of a mixed declension
			-- class of the form SGDECL/PLDECL).
			if rfind(decl_class, "/") then
				track("mixed-decl")
				local indiv_decl_classes = rsplit(decl_class, "/")
				if #indiv_decl_classes ~= 2 then
					error("Mixed declensional class " .. decl_class
						.. "needs exactly two classes, singular and plural")
				end
				sub_decl_classes = {{indiv_decl_classes[1], "sg"}, {indiv_decl_classes[2], "pl"}}
			else
				sub_decl_classes = {{decl_class}}
			end
			for _,decl_class_spec in ipairs(sub_decl_classes) do
				-- We may resolve the user-specified declension class into a
				-- more specific variant depending on the properties of the stem
				-- and/or stress pattern. We use detection functions to do this.
				local orig_decl_class = decl_class_spec[1]
				local number = decl_class_spec[2]
				local real_decl_class = orig_decl_class
				-- Repeatedly resolve a decl class into a more specific one
				-- until nothing changes. We do this so that, e.g., the blank
				-- class can resolve to class "-" (for masculine stems ending
				-- in a consonant), which can resolve in turn to class "-sib"
				-- (for masculine stems ending in a sibilant) or "-normal"
				-- (for non-sibilant stems).
				while true do
					local resolved_decl_class = detectfuns[real_decl_class] and
						detectfuns[real_decl_class](args.stem, stress) or real_decl_class
					if real_decl_class == resolved_decl_class then
						break
					end
					real_decl_class = resolved_decl_class
				end
				if not decls[real_decl_class] then
					if real_decl_class ~= orig_decl_class then 
						error("Unrecognized declension class " .. orig_decl_class .. " (mapped to " .. real_decl_class .. ")")
					else
						error("Unrecognized declension class " .. orig_decl_class)
					end
				end
				tracking_code(stress_arg, stress, orig_decl_class, real_decl_class, args)
				do_stress_pattern(stress_patterns[stress], args,
					decls[real_decl_class], number)
			end
		end
	end

	handle_forms_and_overrides(args)

	return make_table(args)
end

-- The main entry point for modern declension tables.
function export.show(frame)
	return do_show(frame, false)
end

-- The main entry point for old declension tables.
function export.show_old(frame)
	return do_show(frame, true)
end

----------------- Declension helper functions -----------------

local function old_to_new(v)
	v = rsub(v, "—ä$", "")
	v = rsub(v, "^—ä", "")
	v = rsub(v, "—ñ", "–∏")
	v = rsub(v, "—£", "–µ")
	return v
end

-- Function to convert old detect_decl function to new one
local function old_detect_decl_to_new(ofunc)
	return function(stem, stress)
		return old_to_new(ofunc(stem, stress))
	end
end

-- Attempt to detect the type of the stem (= including ending) based
-- on its ending, separating off the base and the ending. DECL is the
-- value passed in and might be "", "m" or "f"; the latter are necessary
-- when dealing with -—å stems.
function detect_stem_type(stem, decl)
	base, ending = rmatch(stem, "^(.*)([–µ–ï]ÃÅ)$")
	if base then
		return base, ulower(ending)
	end
	base = rmatch(stem, "^(.*[—à—â—á–∂—Ü–®–©–ß–ñ–¶])[–µ–ï]$") -- unaccented
	if base then
		return base, "–æ"
	end
	base, ending = rmatch(stem, "^(.*)([—ë–æ–Å–û]ÃÅ?[–Ω–ù][–æ–û][–∫–ö][—ä–™]?)$")
	if base then
		return base, com.remove_accents(ulower(ending))
	end
	base, ending = rmatch(stem, "^(.*)([–º–ú][—è–Ø])ÃÅ?$")
	if base then
		-- FIXME: What about –º—è-1? Maybe it's rare enough that we
		-- don't have to worry about it?
		return base, ending
	end
	base, ending = rmatch(stem, "^(.*)([—å–¨][—è–µ—ë–Ø–ï–Å])ÃÅ?$")
	if base then
		return base, ulower(ending)
	end
	base, ending = rmatch(stem, "^(.*)([–π–∞—è–µ–æ—ë—ä–ô–ê–Ø–ï–û–Å–™])ÃÅ?$")
	if base then
		return base, ulower(ending)
	end
	base = rmatch(stem, "^(.*)[—å–¨]$")
	if base then
		if decl == "m" or decl == "f" then
			return base, "—å-" .. decl
		else
			error("Need to specify decl m or f with stem in -—å: ".. stem)
		end
	end
	if rfind(stem, "[—É—ã—ç—é–∏—ñ—£—µ–£–´–≠–Æ–ò–Ü—¢—¥]ÃÅ?$") then
		error("Don't know how to decline stem ending in this type of vowel: " .. stem)
	end
	-- FIXME: What about -–∏–Ω?
	return stem, "-"
end

--------------------------------------------------------------------------
--                      Second-declension masculine                     --
--------------------------------------------------------------------------

----------------- Masculine hard -------------------

-- Normal hard-masculine declension, ending in a hard consonant
-- (ending in -—ä, old-style).
declensions_old["—ä-normal"] = {
	["nom_sg"] = "—ä",
	["gen_sg"] = "–∞ÃÅ",
	["dat_sg"] = "—ÉÃÅ",
	["acc_sg"] = nil,
	["ins_sg"] = "–æÃÅ–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "—ãÃÅ",
	["gen_pl"] = "–æÃÅ–≤—ä",
	["dat_pl"] = "–∞ÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "–∞ÃÅ–º–∏",
	["pre_pl"] = "–∞ÃÅ—Ö—ä",
}

-- Hard-masculine declension ending in a sibilant (plus -—ä, old-style).
-- Has genitive plural in -–µÃÅ–π.
declensions_old["—ä-sib"] = mw.clone(declensions_old["—ä-normal"])
declensions_old["—ä-sib"]["gen_pl"] = "–µÃÅ–π"

-- User-facing declension type "-" (old-style "—ä");
-- mapped to "-normal" (old-style "—ä-normal") or "-sib" (old-style "—ä-sib")
detect_decl_old["—ä"] = function(stem, stress)
	if sibilant_suffixes[ulower(usub(stem, -1))] then
		return "—ä-sib"
	else
		return "—ä-normal"
	end
end

-- Normal mapping of old —ä would be "" (blank), but we call it "-" so we
-- have a way of referring to it without defaulting if need be (e.g. in the
-- second stem of a word where the first stem has a different decl class),
-- and eventually want to make "" (blank) auto-detect the class.
detect_decl["-"] = old_detect_decl_to_new(detect_decl_old["—ä"])
-- User-facing declension type ""; currently same as "-" (old-style "—ä").
-- FIXME: Should allow the nom. sg. to be given and auto-detect the decl
-- as much as possible.
detect_decl_old[""] = detect_decl_old["—ä"]

----------------- Masculine hard, irregular plural -------------------

-- Normal hard-masculine declension, ending in a hard consonant
-- (ending in -—ä, old-style), with irreg nom pl -–∞.
declensions_old["—ä-–∞-normal"] = mw.clone(declensions_old["—ä-normal"])
declensions_old["—ä-–∞-normal"]["nom_pl"] = "–∞ÃÅ"

-- Hard-masculine declension ending in a sibilant (plus -—ä, old-style),
-- with irreg nom pl -–∞. Has genitive plural in -–µÃÅ–π.
declensions_old["—ä-–∞-sib"] = mw.clone(declensions_old["—ä-–∞-normal"])
declensions_old["—ä-–∞-sib"]["gen_pl"] = "–µÃÅ–π"

-- User-facing declension type "-–∞" (old-style "—ä-–∞");
-- mapped to "—ä-–∞-normal" or "—ä-–∞-sib"
detect_decl_old["—ä-–∞"] = function(stem, stress)
	if sibilant_suffixes[ulower(usub(stem, -1))] then
		return "—ä-–∞-sib"
	else
		return "—ä-–∞-normal"
	end
end

-- Normal hard-masculine declension, ending in a hard consonant
-- (ending in -—ä, old-style), with irreg soft pl -—å—è.
-- Differs from the normal declension throughout the plural.
declensions_old["—ä-—å—è-normal"] = {
	["nom_sg"] = "—ä",
	["gen_sg"] = "–∞ÃÅ",
	["dat_sg"] = "—ÉÃÅ",
	["acc_sg"] = nil,
	["ins_sg"] = "–æÃÅ–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "—å—èÃÅ",
	["gen_pl"] = "—å—ë–≤—ä",
	["dat_pl"] = "—å—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—å—èÃÅ–º–∏",
	["pre_pl"] = "—å—èÃÅ—Ö—ä",
}

-- Same as previous, ending in a sibilant (plus -—ä, old-style).
-- Has genitive plural in -–µÃÅ–π.
declensions_old["—ä-—å—è-sib"] = mw.clone(declensions_old["—ä-—å—è-normal"])
declensions_old["—ä-—å—è-sib"]["gen_pl"] = "–µÃÅ–π"

-- User-facing declension type "-—å—è" (old-style "—ä-—å—è");
-- mapped to "—ä-—å—è-normal" or "—ä-—å—è-sib"
detect_decl_old["—ä-—å—è"] = function(stem, stress)
	if sibilant_suffixes[ulower(usub(stem, -1))] then
		return "—ä-—å—è-sib"
	else
		return "—ä-—å—è-normal"
	end
end

----------------- Masculine hard, suffixed, irregular plural -------------------

declensions_old["–∏–Ω—ä"] = {
	["nom_sg"] = "–∏ÃÅ–Ω—ä",
	["gen_sg"] = "–∏ÃÅ–Ω–∞",
	["dat_sg"] = "–∏ÃÅ–Ω—É",
	["acc_sg"] = nil,
	["ins_sg"] = "–∏ÃÅ–Ω–æ–º—ä",
	["pre_sg"] = "–∏ÃÅ–Ω—£",
	["nom_pl"] = "–µÃÅ",
	["gen_pl"] = "—ä",
	["dat_pl"] = "–∞ÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "–∞ÃÅ–º–∏",
	["pre_pl"] = "–∞ÃÅ—Ö—ä",
}

declensions_old["—ë–Ω–æ–∫—ä"] = {
	["nom_sg"] = "—ë–Ω–æ–∫—ä",
	["gen_sg"] = "—ë–Ω–∫–∞",
	["dat_sg"] = "—ë–Ω–∫—É",
	["acc_sg"] = nil,
	["ins_sg"] = "—ë–Ω–∫–æ–º—ä",
	["pre_sg"] = "—ë–Ω–∫—£",
	["nom_pl"] = "—èÃÅ—Ç–∞",
	["gen_pl"] = "—èÃÅ—Ç",
	["dat_pl"] = "—èÃÅ—Ç–∞–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ—Ç–∞–º–∏",
	["pre_pl"] = "—èÃÅ—Ç–∞—Ö—ä",
}

declensions_old["–æ–Ω–æ–∫—ä"] = declensions_old["—ë–Ω–æ–∫—ä"]
declensions_old["–µ–Ω–æ–∫—ä"] = declensions_old["—ë–Ω–æ–∫—ä"]

----------------- Masculine soft -------------------

-- Normal soft-masculine declension in -—å
declensions_old["—å-m"] = {
	["nom_sg"] = "—å",
	["gen_sg"] = "—èÃÅ",
	["dat_sg"] = "—éÃÅ",
	["acc_sg"] = nil,
	["ins_sg"] = "—ë–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "–∏ÃÅ",
	["gen_pl"] = "–µÃÅ–π",
	["dat_pl"] = "—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ–º–∏",
	["pre_pl"] = "—èÃÅ—Ö—ä",
}

-- Soft-masculine declension in -—å with irreg nom pl -—è
declensions_old["—å-—è"] = mw.clone(declensions_old["—å-m"])
declensions_old["—å-—è"]["nom_pl"] = "—èÃÅ"

----------------- Masculine palatal -------------------

-- Normal masculine declension in palatal -–π
declensions_old["–π-normal"] = {
	["nom_sg"] = "–π",
	["gen_sg"] = "—èÃÅ",
	["dat_sg"] = "—éÃÅ",
	["acc_sg"] = nil,
	["ins_sg"] = "—ë–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "–∏ÃÅ",
	["gen_pl"] = "—ë–≤—ä",
	["dat_pl"] = "—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ–º–∏",
	["pre_pl"] = "—èÃÅ—Ö—ä",
}

-- Masculine declension in -–∏–π (old -—ñ–π):
-- differs from normal in prep sg
declensions_old["(—ñ)–π"] = mw.clone(declensions_old["–π-normal"])
declensions_old["(—ñ)–π"]["pre_sg"] = "–∏ÃÅ"

-- User-facing declension type "–π"; mapped to "–π-normal" or "(—ñ)–π"
detect_decl_old["–π"] = function(stem, stress)
	if rfind(stem, "[—ñ–∏]" .. AC .. "?$") then
		return "(—ñ)–π"
	else
		return "–π-normal"
	end
end

--------------------------------------------------------------------------
--                       First-declension feminine                      --
--------------------------------------------------------------------------

----------------- Feminine hard -------------------

-- Normal hard-feminine declension in -–∞
declensions_old["–∞-normal"] = {
	["nom_sg"] = "–∞ÃÅ",
	["gen_sg"] = "—ãÃÅ",
	["dat_sg"] = "—£ÃÅ",
	["acc_sg"] = "—ÉÃÅ",
	["ins_sg"] = {"–æÃÅ–π", "–æÃÅ—é"},
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "—ãÃÅ",
	["gen_pl"] = "—ä",
	["dat_pl"] = "–∞ÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "–∞ÃÅ–º–∏",
	["pre_pl"] = "–∞ÃÅ—Ö—ä",
}

-- Special case: Hard-feminine declension in sibilant ending with 
-- stressed genitive plural. Has special gen pl -–µÃÅ–π.
declensions_old["–∞-sib-2"] = mw.clone(declensions_old["–∞-normal"])
declensions_old["–∞-sib-2"]["gen_pl"] = "–µÃÅ–π"

-- User-facing declension type "–∞"; mapped to "–∞-normal" or "–∞-sib-2"
detect_decl_old["–∞"] = function(stem, stress)
	if sibilant_suffixes[ulower(usub(stem, -1))] and stressed_gen_pl_patterns[stress] then
		return "–∞-sib-2"
	else
		return "–∞-normal"
	end
end

----------------- Feminine soft -------------------

-- Normal soft-feminine declension in -—è
declensions_old["—è-normal"] = {
	["nom_sg"] = "—èÃÅ",
	["gen_sg"] = "–∏ÃÅ",
	["dat_sg"] = "—£ÃÅ",
	["acc_sg"] = "—éÃÅ",
	["ins_sg"] = {"—ë–π", "—ë—é"},
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "–∏ÃÅ",
	["gen_pl"] = "–π",
	["dat_pl"] = "—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ–º–∏",
	["pre_pl"] = "—èÃÅ—Ö—ä",
}

-- Soft-feminine declension in -–∏—è (old -—ñ—è):
-- differs from normal in dat sg and prep sg
declensions_old["(—ñ)—è"] = mw.clone(declensions_old["—è-normal"])
declensions_old["(—ñ)—è"]["dat_sg"] = "–∏ÃÅ"
declensions_old["(—ñ)—è"]["pre_sg"] = "–∏ÃÅ"

-- User-facing declension type "—è"; mapped to "—è-normal" or "(—ñ)—è"
detect_decl_old["—è"] = function(stem, stress)
	if rfind(stem, "[—ñ–∏]" .. AC .. "?$") then
		return "(—ñ)—è"
	else
		return "—è-normal"
	end
end

-- Soft-feminine declension in -—å—è, with unstressed genitive plural -–∏–π.
-- Almost like —å + -—è endings except for genitive plural.
declensions_old["—å—è-1"] = {
	["nom_sg"] = "—å—èÃÅ",
	["gen_sg"] = "—å–∏ÃÅ",
	["dat_sg"] = "—å—£ÃÅ",
	["acc_sg"] = "—å—éÃÅ",
	["ins_sg"] = {"—å—ë–π", "—å—ë—é"},
	["pre_sg"] = "—å—£ÃÅ",
	["nom_pl"] = "—å–∏ÃÅ",
	["gen_pl"] = "–∏–π",
	["dat_pl"] = "—å—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—å—èÃÅ–º–∏",
	["pre_pl"] = "—å—èÃÅ—Ö—ä",
}

-- Soft-feminine declension in -—å—è, with stressed genitive plural -–µÃÅ–π.
declensions_old["—å—è-2"] = mw.clone(declensions_old["—å—è-1"])
-- circumflex accent is a signal that forces stress, particularly
-- in accent pattern 4.
declensions_old["—å—è-2"]["gen_pl"] = "–µÃÇ–π"

-- User-facing declension type "—å—è"
detect_decl_old["—å—è"] = function(stem, stress)
	if stressed_gen_pl_patterns[stress] or stress == "4" or stress == "4*" then
		return "—å—è-2"
	else
		return "—å—è-1"
	end
end

--------------------------------------------------------------------------
--                       Second-declension neuter                       --
--------------------------------------------------------------------------

----------------- Neuter hard -------------------

-- Normal hard-neuter declension in -–æ
declensions_old["–æ"] = {
	["nom_sg"] = "–æÃÅ",
	["gen_sg"] = "–∞ÃÅ",
	["dat_sg"] = "—ÉÃÅ",
	["acc_sg"] = "–æÃÅ",
	["ins_sg"] = "–æÃÅ–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "–∞ÃÅ",
	["gen_pl"] = "—ä",
	["dat_pl"] = "–∞ÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "–∞ÃÅ–º–∏",
	["pre_pl"] = "–∞ÃÅ—Ö—ä",
}

-- Hard-neuter declension in -–æ with irreg nom pl -–∏
declensions_old["–æ-–∏"] = mw.clone(declensions_old["–æ"])
declensions_old["–æ-–∏"]["nom_pl"] = "—ãÃÅ"

declensions_old["–æ-—ã"] = declensions_old["–æ-–∏"]

-- Normal hard-neuter declension in -–æ with irreg soft pl -—å—è;
-- differs throughout the plural from normal -–æ.
declensions_old["–æ-—å—è-normal"] = {
	["nom_sg"] = "–æÃÅ",
	["gen_sg"] = "–∞ÃÅ",
	["dat_sg"] = "—ÉÃÅ",
	["acc_sg"] = "–æÃÅ",
	["ins_sg"] = "–æÃÅ–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "—å—èÃÅ",
	["gen_pl"] = "—å—ë–≤—ä",
	["dat_pl"] = "—å—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—å—èÃÅ–º–∏",
	["pre_pl"] = "—å—èÃÅ—Ö—ä",
}

-- Same as previous, stem ending in a sibilant.
-- Has genitive plural in -–µÃÅ–π. (FIXME, do any such words occur?)
declensions_old["–æ-—å—è-sib"] = mw.clone(declensions_old["–æ-—å—è-normal"])
declensions_old["–æ-—å—è-sib"]["gen_pl"] = "–µÃÅ–π"

-- User-facing declension type "–æ-—å—è"; mapped to "–æ-—å—è-normal" or "–æ-—å—è-sib"
detect_decl_old["–æ-—å—è"] = function(stem, stress)
	if sibilant_suffixes[ulower(usub(stem, -1))] then
		return "–æ-—å—è-sib"
	else
		return "–æ-—å—è-normal"
	end
end

declensions_old["–æ-—å—è"] = {
}

----------------- Neuter soft -------------------

-- Normal soft-neuter declension in -–µ (stressed -—ë)
declensions_old["–µ-normal"] = {
	["nom_sg"] = "—ë",
	["gen_sg"] = "—èÃÅ",
	["dat_sg"] = "—éÃÅ",
	["acc_sg"] = "—ë",
	["ins_sg"] = "—ë–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "—èÃÅ",
	["gen_pl"] = "–µÃÅ–π",
	["dat_pl"] = "—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ–º–∏",
	["pre_pl"] = "—èÃÅ—Ö—ä",
}

-- Soft-neuter declension in unstressed -–∏–µ (old -—ñ–µ):
-- differs from normal in prep sg and gen pl
declensions_old["(—ñ)–µ-1"] = mw.clone(declensions_old["–µ-normal"])
declensions_old["(—ñ)–µ-1"]["pre_sg"] = "–∏ÃÅ"
declensions_old["(—ñ)–µ-1"]["gen_pl"] = "–π"

-- Soft-neuter declension in stressed -–∏—ë (old -—ñ—ë)
-- differs from normal in gen pl only
declensions_old["(—ñ)–µ-2"] = mw.clone(declensions_old["–µ-normal"])
declensions_old["(—ñ)–µ-2"]["gen_pl"] = "–π"

-- User-facing declension type "–µ"; mapped to "–µ-normal", "(—ñ)–µ-1" or "(—ñ)–µ-2"
detect_decl_old["–µ"] = function(stem, stress)
	if rfind(stem, "[—ñ–∏]" .. AC .. "?$") then
		if stressed_pre_sg_patterns[stress] then
			return "(—ñ)–µ-2"
		else
			return "(—ñ)–µ-1"
		end
	else
		return "–µ-normal"
	end
end

-- User-facing declension type "—ë" = "–µ"
detect_decl_old["—ë"] = detect_decl_old["–µ"]

-- Rare soft-neuter declension in stressed -–µÃÅ, normal variation
-- (e.g. –º—É–¥–µÃÅ).
declensions_old["–µÃÅ-normal"] = {
	["nom_sg"] = "–µÃÅ",
	["gen_sg"] = "—èÃÅ",
	["dat_sg"] = "—éÃÅ",
	["acc_sg"] = "–µÃÅ",
	["ins_sg"] = "–µÃÅ–º—ä",
	["pre_sg"] = "—£ÃÅ",
	["nom_pl"] = "—èÃÅ",
	["gen_pl"] = "–µÃÅ–π",
	["dat_pl"] = "—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ–º–∏",
	["pre_pl"] = "—èÃÅ—Ö—ä",
}

-- Rare soft-neuter declension in -–∏–µÃÅ (old -—ñ–µÃÅ), cf. –±—ã—Ç–∏–µÃÅ
declensions_old["(—ñ)–µÃÅ"] = mw.clone(declensions_old["–µÃÅ-normal"])
declensions_old["(—ñ)–µÃÅ"]["pre_sg"] = "–∏ÃÅ"
declensions_old["(—ñ)–µÃÅ"]["gen_pl"] = "–π"

-- User-facing declension type "–µÃÅ"
detect_decl_old["–µÃÅ"] = function(stem, stress)
	if rfind(stem, "[—ñ–∏]" .. AC .. "?$") then
		return "(—ñ)–µÃÅ"
	else
		return "–µÃÅ-normal"
	end
end

-- Soft-neuter declension in unstressed -—å–µ (stressed -—å—ë),
-- with unstressed genitive plural -–∏–π.
declensions_old["—å–µ-1"] = {
	["nom_sg"] = "—å—ë",
	["gen_sg"] = "—å—èÃÅ",
	["dat_sg"] = "—å—éÃÅ",
	["acc_sg"] = "—å—ë",
	["ins_sg"] = "—å—ë–º—ä",
	["pre_sg"] = "—å—£ÃÅ",
	["nom_pl"] = "—å—èÃÅ",
	["gen_pl"] = "–∏–π",
	["dat_pl"] = "—å—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—å—èÃÅ–º–∏",
	["pre_pl"] = "—å—èÃÅ—Ö—ä",
}

-- Soft-neuter declension in unstressed -—å–µ (stressed -—å—ë),
-- with stressed genitive plural -–µÃÅ–π.
declensions_old["—å–µ-2"] = mw.clone(declensions_old["—å–µ-1"])
declensions_old["—å–µ-2"]["gen_pl"] = "–µÃÅ–π"

-- User-facing declension type "—å–µ"
detect_decl_old["—å–µ"] = function(stem, stress)
	if stressed_gen_pl_patterns[stress] then
		return "—å–µ-2"
	else
		return "—å–µ-1"
	end
end

-- User-facing declension type "—å—ë" = "—å–µ"
detect_decl_old["—å—ë"] = detect_decl_old["—å–µ"]

--------------------------------------------------------------------------
--                           Third declension                           --
--------------------------------------------------------------------------

declensions_old["—å-f"] = {
	["nom_sg"] = "—å",
	["gen_sg"] = "–∏ÃÅ",
	["dat_sg"] = "–∏ÃÅ",
	["acc_sg"] = "—å",
	["ins_sg"] = "—å—é", -- note no stress, will always trigger stem stress even in classes 2/4/6
	["pre_sg"] = "–∏ÃÅ",
	["nom_pl"] = "–∏ÃÅ",
	["gen_pl"] = "–µÃÅ–π",
	["dat_pl"] = "—èÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "—èÃÅ–º–∏",
	["pre_pl"] = "—èÃÅ—Ö—ä",
}

declensions_old["–º—è"] = {
	["nom_sg"] = "–º—è",
	["gen_sg"] = "–º–µ–Ω–∏",
	["dat_sg"] = "–º–µ–Ω–∏",
	["acc_sg"] = nil,
	["ins_sg"] = "–º–µ–Ω–µ–º—ä",
	["pre_sg"] = "–º–µ–Ω–∏",
	["nom_pl"] = "–º–µ–Ω–∞ÃÅ",
	["gen_pl"] = "–º—ë–Ω—ä",
	["dat_pl"] = "–º–µ–Ω–∞ÃÅ–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "–º–µ–Ω–∞ÃÅ–º–∏",
	["pre_pl"] = "–º–µ–Ω–∞ÃÅ—Ö—ä",
}

declensions_old["–º—è-1"] = {
	["nom_sg"] = "–º—è",
	["gen_sg"] = "–º–µ–Ω–∏",
	["dat_sg"] = "–º–µ–Ω–∏",
	["acc_sg"] = nil,
	["ins_sg"] = "–º–µ–Ω–µ–º—ä",
	["pre_sg"] = "–º–µ–Ω–∏",
	["nom_pl"] = "–º—ë–Ω–∞",
	["gen_pl"] = "–º—ë–Ω—ä",
	["dat_pl"] = "–º—ë–Ω–∞–º—ä",
	["acc_pl"] = nil,
	["ins_pl"] = "–º—ë–Ω–∞–º–∏",
	["pre_pl"] = "–º—ë–Ω–∞—Ö—ä",
}

--------------------------------------------------------------------------
--                              Invariable                              --
--------------------------------------------------------------------------

-- Invariable declension; no endings.
declensions_old["*"] = {
	["nom_sg"] = "",
	["gen_sg"] = "",
	["dat_sg"] = "",
	["acc_sg"] = "",
	["ins_sg"] = "",
	["pre_sg"] = "",
	["nom_pl"] = "",
	["gen_pl"] = "",
	["dat_pl"] = "",
	["acc_pl"] = "",
	["ins_pl"] = "",
	["pre_pl"] = "",
}

--------------------------------------------------------------------------
--                         Inflection functions                         --
--------------------------------------------------------------------------

local function clone_old_to_new(odecl)
	local ndecl = {}
	for k, v in pairs(odecl) do
		if type(v) == "table" then
			local new_entry = {}
			for _, i in ipairs(v) do
				table.insert(new_entry, old_to_new(i))
			end
			ndecl[k] = new_entry
		else
			ndecl[k] = old_to_new(v)
		end
	end
	return ndecl
end

-- populate declensions[] from declensions_old[]
for odecltype, odecl in pairs(declensions_old) do
	local ndecltype = old_to_new(odecltype)
	if not declensions[ndecltype] then
		declensions[ndecltype] = clone_old_to_new(odecl)
	end
end

-- populate detect_decl[] from detect_decl_old[]
for odeclfrom, ofunc in pairs(detect_decl_old) do
	local declfrom = old_to_new(odeclfrom)
	if not detect_decl[declfrom] then
		detect_decl[declfrom] = old_detect_decl_to_new(ofunc)
	end
end

local stressed_sibilant_rules = {
	["—è"] = "–∞",
	["—ã"] = "–∏",
	["—ë"] = "–æÃÅ",
	["—é"] = "—É",
}

local stressed_c_rules = {
	["—è"] = "–∞",
	["—ë"] = "–æÃÅ",
	["—é"] = "—É",
}

local unstressed_sibilant_rules = {
	["—è"] = "–∞",
	["—ã"] = "–∏",
	["–æ"] = "–µ",
	["—é"] = "—É",
}

local unstressed_c_rules = {
	["—è"] = "–∞",
	["–æ"] = "–µ",
	["—é"] = "—É",
}

local velar_rules = {
	["—ã"] = "–∏",
}

local stressed_rules = {
	["—à"] = stressed_sibilant_rules,
	["—â"] = stressed_sibilant_rules,
	["—á"] = stressed_sibilant_rules,
	["–∂"] = stressed_sibilant_rules,
	["—Ü"] = stressed_c_rules,
	["–∫"] = velar_rules,
	["–≥"] = velar_rules,
	["—Ö"] = velar_rules,
}

local unstressed_rules = {
	["—à"] = unstressed_sibilant_rules,
	["—â"] = unstressed_sibilant_rules,
	["—á"] = unstressed_sibilant_rules,
	["–∂"] = unstressed_sibilant_rules,
	["—Ü"] = unstressed_c_rules,
	["–∫"] = velar_rules,
	["–≥"] = velar_rules,
	["—Ö"] = velar_rules,
}

local old_consonantal_suffixes = {
	["—ä"] = true,
	["—å"] = true,
	["–π"] = true,
}

local consonantal_suffixes = {
	[""] = true,
	["—å"] = true,
	["–π"] = true,
}

trailing_letter_type = {
	["—à"] = {"sibilant", "cons"},
	["—â"] = {"sibilant", "cons"},
	["—á"] = {"sibilant", "cons"},
	["–∂"] = {"sibilant", "cons"},
	["—Ü"] = {"c", "cons"},
	["–∫"] = {"velar", "cons"},
	["–≥"] = {"velar", "cons"},
	["—Ö"] = {"velar", "cons"},
	["—å"] = {"soft-cons", "cons"},
	["—ä"] = {"hard-cons", "cons"},
	["–π"] = {"palatal", "cons"},
	["–∞"] = {"vowel", "hard-vowel"},
	["—è"] = {"vowel", "soft-vowel"},
	["—ç"] = {"vowel", "hard-vowel"},
	["–µ"] = {"vowel", "soft-vowel"},
	["—£"] = {"vowel", "soft-vowel"},
	["–∏"] = {"i", "vowel", "soft-vowel"},
	["—ñ"] = {"i", "vowel", "soft-vowel"},
	["—µ"] = {"i", "vowel", "soft-vowel"},
	["—ã"] = {"vowel", "hard-vowel"},
	["–æ"] = {"vowel", "hard-vowel"},
	["—ë"] = {"vowel", "soft-vowel"},
	["—É"] = {"vowel", "hard-vowel"},
	["—é"] = {"vowel", "soft-vowel"},
}

sibilant_suffixes = {
	["—à"] = true,
	["—â"] = true,
	["—á"] = true,
	["–∂"] = true,
}

local function combine_stem_and_suffix(args, rules, stem, suf)
	local first = usub(suf, 1, 1)
	if rules then
		local conv = rules[first]
		if conv then
			local ending = usub(suf, 2)
			if args.old and conv == "–∏" and mw.ustring.find(ending, "^ÃÅ?[–∞–µ—ë–∏—ñ–π–æ—É—ç—é—è—£]") then
				conv = "—ñ"
			end
			suf = conv .. ending
		end
	end
	return stem .. suf
end

local function attach_unstressed(args, case, suf)
	if suf == nil then
		return nil
	elseif rfind(suf, "ÃÇ") then -- if suf has circumflex accent, it forces stressed
		return attach_stressed(args, case, suf)
	end
	local is_pl = rfind(case, "_pl$")
	local old = args.old
	local stem = is_pl and args.pl or args.stem
	local barestem = is_pl and args.barepl or args.bare
	if old and old_consonantal_suffixes[suf] or not old and consonantal_suffixes[suf] then
		if rfind(barestem, old and "[–π—å—ä]$" or "[–π—å]$") then
			return barestem
		else
			if suf == "–π" or suf == "—å" then
				if rfind(barestem, "[–∞–µ—ë–∏—ñ–æ—É—ç—é—è—£ÃÅ]$") then
					suf = "–π"
				else
					suf = "—å"
				end
			end
			return barestem .. suf
		end
	end
	suf = com.make_unstressed(suf)
	local rules = unstressed_rules[args.hint]
	return combine_stem_and_suffix(args, rules, stem, suf)
end

function attach_stressed(args, case, suf)
	if suf == nil then
		return nil
	end
 	-- circumflex forces stress even when the accent pattern calls for no stress
	suf = rsub(suf, "ÃÇ", "ÃÅ")
	if not rfind(suf, "[—ëÃÅ]") then -- if suf has no "—ë" or accent marks
		return attach_unstressed(args, case, suf)
	end
	local is_pl = rfind(case, "_pl$")
	local old = args.old
	local stem = is_pl and args.upl or args.ustem
	local rules = stressed_rules[args.hint]
	return combine_stem_and_suffix(args, rules, stem, suf)
end

local function attach_with(args, case, suf, fun)
	if type(suf) == "table" then
		local tbl = {}
		for _, x in ipairs(suf) do
			for _, form in ipairs(attach_with(args, case, x, fun)) do
				table.insert(tbl, form)
			end
		end
		return tbl
	else
		return {fun(args, case, suf)}
	end
end

local function gen_form(args, decl, case, fun)
	if not args.forms[case] then
		args.forms[case] = {}
	end
	for _, form in ipairs(attach_with(args, case, decl[case], fun)) do
		ut.insert_if_not(args.forms[case], form)
	end
end

local attachers = {
	["+"] = attach_stressed,
	["-"] = attach_unstressed,
}

function do_stress_pattern(stress_pattern, args, decl, number)
	for case in pairs(decl_cases) do
		if not number or (number == "sg" and rfind(case, "_sg$")) or
			(number == "pl" and rfind(case, "_pl$")) then
			gen_form(args, decl, case, attachers[stress_pattern[case]])
		end
	end
end

stress_patterns["1"] = {
	nom_sg="-", gen_sg="-", dat_sg="-", acc_sg="-", ins_sg="-", pre_sg="-",
	nom_pl="-", gen_pl="-", dat_pl="-", acc_pl="-", ins_pl="-", pre_pl="-",
}

stress_patterns["2"] = {
	nom_sg="+", gen_sg="+", dat_sg="+", acc_sg="+", ins_sg="+", pre_sg="+",
	nom_pl="+", gen_pl="+", dat_pl="+", acc_pl="+", ins_pl="+", pre_pl="+",
}

stress_patterns["3"] = {
	nom_sg="-", gen_sg="-", dat_sg="-", acc_sg="-", ins_sg="-", pre_sg="-",
	nom_pl="+", gen_pl="+", dat_pl="+", acc_pl="+", ins_pl="+", pre_pl="+",
}

stress_patterns["4"] = {
	nom_sg="+", gen_sg="+", dat_sg="+", acc_sg="+", ins_sg="+", pre_sg="+",
	nom_pl="-", gen_pl="-", dat_pl="-", acc_pl="-", ins_pl="-", pre_pl="-",
}

stress_patterns["4*"] = {
	nom_sg="+", gen_sg="+", dat_sg="+", acc_sg="-", ins_sg="+", pre_sg="+",
	nom_pl="-", gen_pl="-", dat_pl="-", acc_pl="-", ins_pl="-", pre_pl="-",
}

stress_patterns["5"] = {
	nom_sg="-", gen_sg="-", dat_sg="-", acc_sg="-", ins_sg="-", pre_sg="-",
	nom_pl="-", gen_pl="+", dat_pl="+", acc_pl="+", ins_pl="+", pre_pl="+",
}

stress_patterns["6"] = {
	nom_sg="+", gen_sg="+", dat_sg="+", acc_sg="+", ins_sg="+", pre_sg="+",
	nom_pl="-", gen_pl="+", dat_pl="+", acc_pl="+", ins_pl="+", pre_pl="+",
}

stress_patterns["6*"] = {
	nom_sg="+", gen_sg="+", dat_sg="+", acc_sg="-", ins_sg="+", pre_sg="+",
	nom_pl="-", gen_pl="+", dat_pl="+", acc_pl="+", ins_pl="+", pre_pl="+",
}

stressed_gen_pl_patterns = {
	["2"] = true,
	["3"] = true,
	["5"] = true,
	["6"] = true,
	["6*"] = true,
}

stressed_pre_sg_patterns = {
	["2"] = true,
	["4"] = true,
	["4*"] = true,
	["6"] = true,
	["6*"] = true,
}

local after_titles = {
	["a"] = " (animate)",
	["i"] = " (inanimate)",
	["b"] = "",
}

local numbers = {
	["s"] = "singular",
	["p"] = "plural",
}

local form_temp = [=[{term}&lt;br/>&lt;span style="color: #888">{tr}&lt;/span>]=]
local old_title_temp = [=[Pre-reform declension of &lt;b lang="ru" class="Cyrl">{lemma}&lt;/b>]=]
local title_temp = [=[Declension of &lt;b lang="ru" class="Cyrl">{lemma}&lt;/b>]=]

local partitive = nil
local locative = nil
local vocative = nil
local notes_template = nil
local templates = {}

-- cases that are declined normally instead of handled through overrides
decl_cases = {
	["nom_sg"] = true,
	["gen_sg"] = true,
	["dat_sg"] = true,
	["acc_sg"] = true,
	["ins_sg"] = true,
	["pre_sg"] = true,
	["nom_pl"] = true,
	["gen_pl"] = true,
	["dat_pl"] = true,
	["acc_pl"] = true,
	["ins_pl"] = true,
	["pre_pl"] = true,
}

-- all cases displayable or handleable through overrides
cases = {
	["nom_sg"] = true,
	["gen_sg"] = true,
	["dat_sg"] = true,
	["acc_sg"] = true,
	["ins_sg"] = true,
	["pre_sg"] = true,
	["nom_pl"] = true,
	["gen_pl"] = true,
	["dat_pl"] = true,
	["acc_pl"] = true,
	["ins_pl"] = true,
	["pre_pl"] = true,
	["par"] = true,
	["loc"] = true,
	["voc"] = true,
}

function handle_forms_and_overrides(args)
	for case in pairs(cases) do
		local ispl = rfind(case, "_pl$")
		if args.sgtail and not ispl and args.forms[case] then
			local lastarg = #(args.forms[case])
			if lastarg > 0 then
				args.forms[case][lastarg] = args.forms[case][lastarg] .. args.sgtail
			end
		end
		if args.pltail and ispl and args.forms[case] then
			local lastarg = #(args.forms[case])
			if lastarg > 0 then
				args.forms[case][lastarg] = args.forms[case][lastarg] .. args.pltail
			end
		end
		if args[case] then
			args[case] = rsub(args[case], "~", ispl and args.pl or args.stem)
		end
		args[case] = args[case] and rsplit(args[case], "%s*,%s*") or args.forms[case]
	end

	-- handle + in loc/par meaning "the expected form"
	for _, case in ipairs({"loc", "par"}) do
		if args[case] then
			local new_args = {}
			for _, arg in ipairs(args[case]) do
				-- don't just handle + by itself in case the arg has –≤ or –Ω–∞
				-- or whatever attached to it
				if rfind(arg, "^%+") or rfind(arg, "[%s%[|]%+") then
					for _, dat in ipairs(args["dat_sg"]) do
						local subval = case == "par" and dat or com.make_ending_stressed(dat)
						-- wrap the word in brackets so it's linked; but not if it
						-- appears to already be linked
						local newarg = rsub(arg, "^%+", "[[" .. subval .. "]]")
						newarg = rsub(newarg, "([%[|])%+", "%1" .. subval)
						newarg = rsub(newarg, "(%s)%+", "%1[[" .. subval .. "]]")
						table.insert(new_args, newarg)
					end
				else
					table.insert(new_args, arg)
				end
			end
			args[case] = new_args
		end
	end
end

-- Make the table
function make_table(args)
	local anim = args.a
	local numb = args.n
	local old = args.old
	args.after_title = after_titles[anim]
	args.number = numbers[numb]

	args.lemma = m_links.remove_links((numb == "p") and table.concat(args.nom_pl, ", ") or table.concat(args.nom_sg, ", "))
	args.title = args.title or
		strutils.format(old and old_title_temp or title_temp, args)

	for case in pairs(cases) do
		if args[case] then
			if type(args[case]) ~= "table" then
				error("Logic error, args[case] should be nil or table")
			end
			if #args[case] == 0 then
				args[case] = nil
			end
		end
	end

	if anim == "a" then
		if not args.acc_sg then
			args.acc_sg = args.gen_sg
		end
		if not args.acc_pl then
			args.acc_pl = args.gen_pl
		end
	elseif anim == "i" then
		if not args.acc_sg then
			args.acc_sg = args.nom_sg
		end
		if not args.acc_pl then
			args.acc_pl = args.nom_pl
		end
	end

	for case in pairs(cases) do
		if args[case] then
			if #args[case] == 1 and args[case][1] == "-" then
				args[case] = "&amp;mdash;"
			else
				local ru_vals = {}
				local tr_vals = {}
				for i, x in ipairs(args[case]) do
					local entry, notes = m_table_tools.get_notes(x)
					-- clean &lt;br /> that's in many multi-form entries and
					-- messes up linking
					entry = rsub(entry, "^%s*&lt;br%s*/>%s*", "")
					if old then
						ut.insert_if_not(ru_vals, m_links.full_link(com.make_unstressed(entry), entry, lang, nil, nil, nil, {tr = "-"}, false) .. notes)
					else
						ut.insert_if_not(ru_vals, m_links.full_link(entry, nil, lang, nil, nil, nil, {tr = "-"}, false) .. notes)
					end
					ut.insert_if_not(tr_vals, lang:transliterate(m_links.remove_links(entry)) .. notes)
				end
				local term = table.concat(ru_vals, ", ")
				local tr = table.concat(tr_vals, ", ")
				args[case] = strutils.format(form_temp, {["term"] = term, ["tr"] = tr})
			end
		end
	end

	local temp = nil

	if numb == "s" then
		args.nom_x = args.nom_sg
		args.gen_x = args.gen_sg
		args.dat_x = args.dat_sg
		args.acc_x = args.acc_sg
		args.ins_x = args.ins_sg
		args.pre_x = args.pre_sg
		if args.acc_sg then
			temp = "half"
		else
			temp = "half_a"
		end
	elseif numb == "p" then
		args.nom_x = args.nom_pl
		args.gen_x = args.gen_pl
		args.dat_x = args.dat_pl
		args.acc_x = args.acc_pl
		args.ins_x = args.ins_pl
		args.pre_x = args.pre_pl
		args.par = nil
		args.loc = nil
		args.voc = nil
		if args.acc_pl then
			temp = "half"
		else
			temp = "half_a"
		end
	else
		if args.acc_pl then
			temp = "full"
		elseif args.acc_sg then
			temp = "full_af"
		else
			temp = "full_a"
		end
	end

	if args.par then
		args.par_clause = strutils.format(partitive, args)
	else
		args.par_clause = ""
	end

	if args.loc then
		args.loc_clause = strutils.format(locative, args)
	else
		args.loc_clause = ""
	end

	if args.voc then
		args.voc_clause = strutils.format(vocative, args)
	else
		args.voc_clause = ""
	end

	if args.notes then
		args.notes_clause = strutils.format(notes_template, args)
	else
		args.notes_clause = ""
	end

	return strutils.format(templates[temp], args)
end

partitive = [===[

! style="background:#eff7ff" | partitive
| {par}
|-]===]

locative = [===[

! style="background:#eff7ff" | locative
| {loc}
|-]===]

vocative = [===[

! style="background:#eff7ff" | vocative
| {voc}
|-]===]

notes_template = [===[
&lt;div style="width:100%;text-align:left;background:#d9ebff">
&lt;div style="display:inline-block;text-align:left;padding-left:1em;padding-right:1em">
{notes}
&lt;/div>&lt;/div>
]===]

templates["full"] = [===[
&lt;div>
&lt;div class="NavFrame" style="display: inline-block; min-width: 45em">
&lt;div class="NavHead" style="background:#eff7ff">{title}{after_title}&lt;/div>
&lt;div class="NavContent">
{\op}| style="background:#F9F9F9;text-align:center; min-width:45em" class="inflection-table"
|-
! style="width:10em;background:#d9ebff" | 
! style="background:#d9ebff" | singular
! style="background:#d9ebff" | plural
|-
! style="background:#eff7ff" | nominative
| {nom_sg}
| {nom_pl}
|-
! style="background:#eff7ff" | genitive
| {gen_sg}
| {gen_pl}
|-
! style="background:#eff7ff" | dative
| {dat_sg}
| {dat_pl}
|-
! style="background:#eff7ff" | accusative
| {acc_sg}
| {acc_pl}
|-
! style="background:#eff7ff" | instrumental
| {ins_sg}
| {ins_pl}
|-
! style="background:#eff7ff" | prepositional
| {pre_sg}
| {pre_pl}
|-{par_clause}{loc_clause}{voc_clause}
|{\cl}{notes_clause}&lt;/div>&lt;/div>&lt;/div>]===]

templates["full_a"] = [===[
&lt;div>
&lt;div class="NavFrame" style="display: inline-block; min-width: 50em">
&lt;div class="NavHead" style="background:#eff7ff">{title}{after_title}&lt;/div>
&lt;div class="NavContent">
{\op}| style="background:#F9F9F9;text-align:center; min-width:50em" class="inflection-table"
|-
! style="width:15em;background:#d9ebff" | 
! style="background:#d9ebff" | singular
! style="background:#d9ebff" | plural
|-
! style="background:#eff7ff" | nominative
| {nom_sg}
| {nom_pl}
|-
! style="background:#eff7ff" | genitive
| {gen_sg}
| {gen_pl}
|-
! style="background:#eff7ff" | dative
| {dat_sg}
| {dat_pl}
|-
! style="background:#eff7ff" rowspan="2" | accusative &lt;span style="padding-left:1em;display:inline-block;vertical-align:middle">animate&lt;br/>inanimate&lt;/span>
| {gen_sg}
| {gen_pl}
|-
| {nom_sg}
| {nom_pl}
|-
! style="background:#eff7ff" | instrumental
| {ins_sg}
| {ins_pl}
|-
! style="background:#eff7ff" | prepositional
| {pre_sg}
| {pre_pl}
|-{par_clause}{loc_clause}{voc_clause}
|{\cl}{notes_clause}&lt;/div>&lt;/div>&lt;/div>]===]

templates["full_af"] = [===[
&lt;div>
&lt;div class="NavFrame" style="display: inline-block; min-width: 50em">
&lt;div class="NavHead" style="background:#eff7ff">{title}{after_title}&lt;/div>
&lt;div class="NavContent">
{\op}| style="background:#F9F9F9;text-align:center; min-width:50em" class="inflection-table"
|-
! style="width:15em;background:#d9ebff" | 
! style="background:#d9ebff" | singular
! style="background:#d9ebff" | plural
|-
! style="background:#eff7ff" | nominative
| {nom_sg}
| {nom_pl}
|-
! style="background:#eff7ff" | genitive
| {gen_sg}
| {gen_pl}
|-
! style="background:#eff7ff" | dative
| {dat_sg}
| {dat_pl}
|-
! style="background:#eff7ff" rowspan="2" | accusative &lt;span style="padding-left:1em;display:inline-block;vertical-align:middle">animate&lt;br/>inanimate&lt;/span>
| rowspan="2" | {acc_sg}
| {gen_pl}
|-
| {nom_pl}
|-
! style="background:#eff7ff" | instrumental
| {ins_sg}
| {ins_pl}
|-
! style="background:#eff7ff" | prepositional
| {pre_sg}
| {pre_pl}
|-{par_clause}{loc_clause}{voc_clause}
|{\cl}{notes_clause}&lt;/div>&lt;/div>&lt;/div>]===]

templates["half"] = [===[
&lt;div>
&lt;div class="NavFrame" style="display: inline-block; min-width: 30em">
&lt;div class="NavHead" style="background:#eff7ff">{title}{after_title}&lt;/div>
&lt;div class="NavContent">
{\op}| style="background:#F9F9F9;text-align:center; min-width:30em" class="inflection-table"
|-
! style="width:10em;background:#d9ebff" | 
! style="background:#d9ebff" | {number}
|-
! style="background:#eff7ff" | nominative
| {nom_x}
|-
! style="background:#eff7ff" | genitive
| {gen_x}
|-
! style="background:#eff7ff" | dative
| {dat_x}
|-
! style="background:#eff7ff" | accusative
| {acc_x}
|-
! style="background:#eff7ff" | instrumental
| {ins_x}
|-
! style="background:#eff7ff" | prepositional
| {pre_x}
|-{par_clause}{loc_clause}{voc_clause}
|{\cl}{notes_clause}&lt;/div>&lt;/div>&lt;/div>]===]

templates["half_a"] = [===[
&lt;div>
&lt;div class="NavFrame" style="display: inline-block; min-width: 35em">
&lt;div class="NavHead" style="background:#eff7ff">{title}{after_title}&lt;/div>
&lt;div class="NavContent">
{\op}| style="background:#F9F9F9;text-align:center; min-width:35em" class="inflection-table"
|-
! style="width:15em;background:#d9ebff" | 
! style="background:#d9ebff" | {number}
|-
! style="background:#eff7ff" | nominative
| {nom_x}
|-
! style="background:#eff7ff" | genitive
| {gen_x}
|-
! style="background:#eff7ff" | dative
| {dat_x}
|-
! style="background:#eff7ff" rowspan="2" | accusative &lt;span style="padding-left:1em;display:inline-block;vertical-align:middle">animate&lt;br/>inanimate&lt;/span>
| {gen_x}
|-
| {nom_x}
|-
! style="background:#eff7ff" | instrumental
| {ins_x}
|-
! style="background:#eff7ff" | prepositional
| {pre_x}
|-{par_clause}{loc_clause}{voc_clause}
|{\cl}{notes_clause}&lt;/div>&lt;/div>&lt;/div>]===]

return export

-- For Vim, so we get 4-space tabs
-- vim: set ts=4 sw=4 noet:
</textarea><div class='editOptions'>
<span class="mw-summary" id="wpSummaryLabel"><label for="wpSummary"><a href="/wiki/Help:Edit_summary" title="Help:Edit summary">Edit summary</a>:</label></span> <input class="mw-summary" id="wpSummary" maxlength="200" tabindex="1" size="60" spellcheck="true" title="Enter a short summary [b]" accesskey="b" name="wpSummary" /><div class='editCheckboxes'>
</div>
<div id="editpage-copywarn">
<p>By clicking the ‚ÄúSave Page‚Äù button, you are agreeing to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use" class="extiw" title="wmf:Terms of Use">Terms of Use</a> and the <a href="//wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy Policy</a>, and you irrevocably agree to release your contribution under the <a rel="nofollow" class="external text" href="http://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA 3.0 License</a> and the <a rel="nofollow" class="external text" href="http://www.gnu.org/copyleft/fdl.html">GFDL</a>. You agree that a hyperlink or URL is sufficient attribution under the Creative Commons license.
</p>
</div>
<div class='editButtons'>
<input id="wpSave" name="wpSave" tabindex="3" title="Save your changes [s]" accesskey="s" type="submit" value="Save page" />

<input id="wpDiff" name="wpDiff" tabindex="5" title="Show which changes you made to the text [v]" accesskey="v" type="submit" value="Show changes" />
	<span class='cancelLink'><a href="/wiki/Module:ru-noun" title="Module:ru-noun" id="mw-editform-cancel">Cancel</a><span class="mw-editButtons-pipe-separator"> | </span></span>
	<span class='editHelp'><a target="helpwindow" href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Editing_pages">Editing help</a> (opens in new window)</span>
</div><!-- editButtons -->
<fieldset id="templatesandbox-editform"><legend>Preview page with this template</legend><input id="wpTemplateSandboxTemplate" type="hidden" value="Module:ru-noun" name="wpTemplateSandboxTemplate" /><span class="mw-templatesandbox-page" id="wpTemplateSandboxPageLabel"><label for="wpTemplateSandboxPage">Page title:</label></span> <input id="wpTemplateSandboxPage" tabindex="6" size="60" spellcheck="true" name="wpTemplateSandboxPage" /><input id="wpTemplateSandboxPreview" name="wpTemplateSandboxPreview" type="submit" tabindex="7" value="Show preview" /></fieldset>
</div><!-- editOptions -->

<input type="hidden" value="+\" name="wpEditToken" />
<div class="mw-editTools"><div id="editpage-specialchars" class="plainlinks" style="margin-top:1px;border-width:1px;border-style:solid;border-color:#aaaaaa;padding:2px;">
<p class="specialbasic" id="edittools-Latin.2FRoman">
<span title="letters with acute accents"><b>Acute</b>: <span class="charinsert">√Å √° ƒÜ ƒá √â √© «µ ·∏± √ç √≠ ƒπ ƒ∫ ≈É ≈Ñ √ì √≥ ≈î ≈ï ≈ö ≈õ √ö √∫ ·∫Ç ·∫É √ù √Ω ≈π ≈∫ «º «Ω</span></span> ¬∑¬∑¬∑
<span title="grave accents"><b>Grave</b>: <span class="charinsert">√Ä √† √à √® √å √¨ √í √≤ √ô √π ·∫Ä ·∫Å ·ª≤ ·ª≥</span></span> ¬∑¬∑¬∑
<span title="circumflexes"><b>Circumflex</b>: <span class="charinsert">√Ç √¢ ƒà ƒâ √ä √™ ƒú ƒù ƒ§ ƒ• √é √Æ ƒ¥ ƒµ √î √¥ ≈ú ≈ù √õ √ª ≈¥ ≈µ ≈∂ ≈∑</span></span> ¬∑¬∑¬∑
<span title="umlauts and diaereses"><b>Umlauts and diaereses</b>: <span class="charinsert">√Ñ √§ √ã √´ √è √Ø √ñ √∂ √ú √º ·∫Ñ ·∫Ö ≈∏ √ø</span></span> ¬∑¬∑¬∑
<span title="tildes"><b>Tilde</b>: <span class="charinsert">√É √£ ·∫º ·∫Ω ƒ® ƒ© lÃÉ mÃÉ √ë √± rÃÉ √ï √µ ≈® ≈© ·ª∏ ·ªπ</span></span> ¬∑¬∑¬∑
<span title="rings above/krou≈æek diacritics"><b>Ring</b>: <span class="charinsert">√Ö √• ≈Æ ≈Ø</span></span> ¬∑¬∑¬∑
<span title="cedillas"><b>Cedilla</b>: <span class="charinsert">√á √ß ƒ¢ ƒ£ ƒ∂ ƒ∑ ƒª ƒº ≈Ö ≈Ü ≈ñ ≈ó ≈û ≈ü</span></span> ¬∑¬∑¬∑
<span title="commas below"><b>Comma below</b>: <span class="charinsert">DÃ¶ dÃ¶ »ò »ô »ö »õ</span></span> ¬∑¬∑¬∑
<span title="ogoneks"><b>Ogonek</b>: <span class="charinsert">ƒÑ ƒÖ ƒò ƒô ƒÆ ƒØ «™ «´ ≈≤ ≈≥</span></span> ¬∑¬∑¬∑ <span title="hooks"><b>Hook</b>: <span class="charinsert">·∫¢ ·∫£ ·∫∫ ·∫ª ·ªà ·ªâ ·ªé ·ªè ·ª¶ ·ªß ·ª∂ ·ª∑</span></span> ¬∑¬∑¬∑ <span title="horns"><b>Horn</b>: <span class="charinsert">∆† ∆° ∆Ø ∆∞</span></span> ¬∑¬∑¬∑ <span title="letters with carons/h√°ƒçeks"><b>Caron</b>: <span class="charinsert">«ç «é ƒå ƒç ƒé ƒè ƒö ƒõ «è «ê JÃå «∞ ƒΩ ƒæ ≈á ≈à «ë «í ≈ò ≈ô ≈† ≈° ≈§ ≈• «ì «î ≈Ω ≈æ «Æ «Ø</span></span> ¬∑¬∑¬∑
<span title="breves"><b>Breve</b>: <span class="charinsert">ƒÇ ƒÉ ƒî ƒï ƒû ƒü ƒ¨ ƒ≠ ≈é ≈è ≈¨ ≈≠</span></span> ¬∑¬∑¬∑
<span title="strokes"><b>Stroke</b>: <span class="charinsert">…É ∆Ä ƒê ƒë «§ «• ƒ¶ ƒß ≈Å ≈Ç √ò √∏ ≈¶ ≈ß …Ñ  â</span></span> ¬∑¬∑¬∑
<span title="double acute accents"><b>Double acute</b>: <span class="charinsert">≈ê ≈ë ≈∞ ≈±</span></span> ¬∑¬∑¬∑
<span title="macrons"><b>Macron</b>: <span class="charinsert">ƒÄ ƒÅ ƒí ƒì ƒ™ ƒ´ ≈å ≈ç ≈™ ≈´ »≤ »≥ «¢ «£</span></span> ¬∑¬∑¬∑
<span title="dots above"><b>Dot above</b>: <span class="charinsert">·∏Ç ·∏É ƒä ƒã ·∏ä ·∏ã ƒñ ƒó ·∏û ·∏ü ƒ† ƒ° ƒ∞ i ·πÄ ·πÅ ·πÑ ·πÖ ·πñ ·πó ·πò ·πô ·π† ·π° ·π™ ·π´ ≈ª ≈º</span></span> ¬∑¬∑¬∑
<span title="dots below"><b>Dot below</b>: <span class="charinsert">·∫† ·∫° ·∏å ·∏ç ·∫∏ ·∫π ·∏§ ·∏• ·ªä ·ªã ·ªå ·ªç ·πö ·πõ ·π¢ ·π£ ·π¨ ·π≠ ·ª§ ·ª• ·ª¥ ·ªµ ·∫í ·∫ì</span></span> ¬∑¬∑¬∑
<span title="AE ligatures"><b>Ligatures</b>: <span class="charinsert">√Ü √¶</span></span> <span title="OE ligatures"><span class="charinsert">≈í ≈ì</span></span> <span title="Eszett (ss/sz ligature)"><span class="charinsert">√ü</span></span> ¬∑¬∑¬∑ <b>Others</b>: 
<span title="eth (distinct from D with stroke)"><span class="charinsert">√ê √∞</span>¬†</span>¬∑<span title="thorn">¬†<span class="charinsert">√û √æ</span>¬†</span>¬∑<span class="charinsert">»ú »ù «∑ ∆ø ÍùΩ ·µπ</span></span>¬∑<span title="hwair"><span class="charinsert">«∂ ∆ï</span></span>¬∑<span title="eng"><span class="charinsert">≈ä ≈ã</span></span>¬∑<span title="dotless i"><span class="charinsert">ƒ±</span></span>¬∑<span title="long s">¬†<span class="charinsert">≈ø</span></span> ¬∑<span title="Hawaiian  ªokina"><b><span class="charinsert"> ª</span></b> ¬∑¬∑¬∑ </span> <b>Double diacritics</b>: <span class="charinsert">·∫∞ ·∫± ·∫≤ ·∫≥ ·∫¥ ·∫µ ·∫Æ ·∫Ø ·∫∂ ·∫∑ ·∫¶ ·∫ß ·∫® ·∫© ·∫™ ·∫´ ·∫§ ·∫• ·∫¨ ·∫≠ ƒÖÃÅ ƒÖÃÉ  ƒçÃ£ ƒåÃ£ ·ªÄ ·ªÅ ·ªÇ ·ªÉ ·ªÑ ·ªÖ ·∫æ ·∫ø ·ªÜ ·ªá ·∏ó ƒñÃÑ ƒóÃÑ ƒôÃÅ ƒôÃÉ ƒóÃÅ ƒóÃÉ  ·∏Æ ·∏Ø ƒØÃÅ ƒØÃÉ ·ªí ·ªì ·ªî ·ªï ·ªñ ·ªó ·ªê ·ªë «¨ «≠ ·ªò ·ªô ·πì ·ªú ·ªù ·ªû ·ªü ·ª† ·ª° ·ªö ·ªõ ·ª¢ ·ª£ ·πé ·πè «ó «ò «õ «ú «ô «ö «ï «ñ ·ª™ ·ª´ ·ª¨ ·ª≠ ·ªÆ ·ªØ ·ª® ·ª© ·ª∞ ·ª± ≈≥ÃÅ ≈≥ÃÉ ≈´ÃÅ ≈´ÃÉ  √øÃÅ </span>
</p>
<p class="specialbasic" id="edittools-IPA_and_enPR">
<b><a href="/wiki/Wiktionary:IPA" title="Wiktionary:IPA" class="mw-redirect">IPA</a></b>: <span class="charinsert">{{IPA|/+/|lang=}}</span>
<b><a href="/wiki/Wiktionary:IPA#Vowels" title="Wiktionary:IPA" class="mw-redirect">Vowels</a></b>: <span class="charinsert" title="IPA vowels">…®  â …Ø …™ ·µª  è  ä ·µø √∏ …ò …µ …§ …ô …õ ≈ì …ú …û  å …î √¶ …ê …∂ …ë …í …ö …ù √£ …ëÃÉ …ôÃÉ …õÃÉ …îÃÉ ≈ìÃÉ √¶ÃÉ ·∫Ω ƒ© √µ ≈© iÃØ yÃØ uÃØ …™ÃØ  èÃØ  äÃØ …êÃØ eÃû oÃû √∏Ãû aÃØ iÃ• uÃ• …ØÃ• ·µä</span> ¬∑¬∑¬∑ 
<b><a href="/wiki/Wiktionary:IPA#Suprasegmentals" title="Wiktionary:IPA" class="mw-redirect">Suprasegmentals</a></b>: <span class="charinsert" title="IPA Suprasegmentals">Àà Àå Àê Àë À• À¶ Àß À® À© ‚Äø Íúõ Íúú </span> ¬∑¬∑¬∑
<b><a href="/wiki/Wiktionary:IPA#Consonants_.28Pulmonic.29" title="Wiktionary:IPA" class="mw-redirect">Pulmonic consonants</a></b>: <span class="charinsert" title="IPA pulmonic consonants">bÃ• dÃ• …°Ãä lÃ• mÃ• nÃ• rÃ• tÃ™ dÃ™ nÃ™  à …ñ …ü …¢  î …± n …≥ …≤ ≈ã …¥  ô  Ä …æ …Ω …∏ Œ≤ ·πΩ Œ∏ √∞  É  í  Ç  ê √ß  ù …£ œá  Å ƒß  ï …¶ …¨ …Æ  ã …π …ª …∞ …≠  é  ü  ç …•  ú  ¢  ° …ï  ë …∫ …ß …° …´ lÃ© mÃ© nÃ© rÃ© …πÃ© rÃ• tÕ° É dÕ° í tÕ°…ï dÕ° ë tÕ°s dÕ°z</span> ¬∑¬∑¬∑
<b><a href="/wiki/Wiktionary:IPA#Consonants_.28non-pulmonic.29" title="Wiktionary:IPA" class="mw-redirect">Non-pulmonic consonants</a></b>: <a href="//en.wikipedia.org/wiki/Click_consonant" class="extiw" title="w:Click consonant">Clicks</a>: <span class="charinsert" title="IPA non-pulmonic consonants - clicks"> ò «Ä «É «Ç «Å</span> ¬∑ <a href="//en.wikipedia.org/wiki/Implosive_consonant" class="extiw" title="w:Implosive consonant">Implosives</a>: <span class="charinsert" title="IPA non-pulmonic consonants - implosives">…ì …ó  Ñ …†  õ</span> ¬∑ <a href="//en.wikipedia.org/wiki/Ejective_consonant" class="extiw" title="w:Ejective consonant">Ejectives</a>: <span class="charinsert" title="IPA non-pulmonic consonants - ejectives"> º</span> ¬∑¬∑¬∑ <b><a href="/wiki/Wiktionary:IPA#Diacritics" title="Wiktionary:IPA" class="mw-redirect">Diacritics</a></b>: <span title="IPA diacritics" class="charinsert"> ∞  ±  ≤  ∑ À† ÀÅ Àû ·µù ¬†Ã∞  ¬†Ã§ </span><br/>
<b><a href="/wiki/Appendix:English_pronunciation" title="Appendix:English pronunciation">enPR</a></b>: <span class="charinsert">{{enPR|+}}</span>
<b><a href="/wiki/Appendix:English_pronunciation#Vowels" title="Appendix:English pronunciation">Vowels</a></b>: <span class="charinsert">ƒÅ ƒÉ √§ √¢ ƒì ƒï ƒ´ ƒ≠ √Æ ≈ç ≈è √¥ ≈≠ oÕûo</span> (‚Äúfood‚Äù) <span class="charinsert">oÕùo</span> (‚Äúfoot‚Äù) <span class="charinsert">√ª …ô</span> ¬∑¬∑¬∑
<b>Partially anglicised foreign phonemes</b>: <span class="charinsert">…¥  Ä ·¥ã ú √∂ √º</span> ¬∑¬∑¬∑
<b><a href="/wiki/Appendix:English_pronunciation#Other_symbols" title="Appendix:English pronunciation">Stress markers</a></b>: <span class="charinsert"> π '</span>
</p>
<p class="specialbasic" id="edittools-Miscellaneous">
<b>Wiki markup</b>: <span class="charinsert">{{+}} # &lt;+&gt; ~ |</span> ¬∑¬∑¬∑
<b>Quotation marks</b>: <b><span class="charinsert">‚Äú+‚Äù ‚Äò+‚Äô ‚Äò ‚Äô ‚Äõ ‚Äû+‚Äú ‚Äö+‚Äò ¬´+¬ª ‚Äπ+‚Ä∫ ‚ü®+‚ü©</span></b> ¬∑¬∑¬∑
<b>Other punctuation</b>: <span class="charinsert">
<span title="ellipsis">‚Ä¶</span> <span title="middle dot">¬∑</span>
<span title="non-breaking hyphen">‚Äë</span> <span title="en dash">‚Äì</span> <span title="em dash">‚Äî</span> <span title="quotation dash">‚Äï</span> <span title="double oblique hyphen">‚∏ó</span>
<span title="inverted question mark">¬ø</span>
<span title="inverted exclamation mark">¬°</span>
<span title="interrobang">‚ÄΩ</span></span>
<b>Mathematical symbols</b>:
<span class="charinsert"><span title="plus-minus sign">¬±</span>
<span title="minus sign">‚àí</span>
<span title="multiplication sign">√ó</span>
<span title="division sign">√∑</span>
<span title="degree sign">¬∞</span>
<span title="approximately equals">‚âà</span>
<span title="not equal to">‚â†</span>
<span title="empty set, nothing">‚àÖ</span></span>
<b>Other symbols</b>:
<span class="charinsert"><span title="ordinal indicators" class="charinsert">¬™ ¬∫</span>
<span title="pilcrow/paragraph sign">¬∂</span>
<span title="section sign">¬ß</span>
<span title="single and double daggers">‚Ä† ‚Ä°</span>
<span title="numero sign">‚Ññ</span>
<span title="subscripts">‚ÇÅ ‚ÇÇ ‚ÇÉ</span>
<span title="Tironian et">‚Åä</span>
<span title="checkmark">‚úî</span>
<span title="right arrows">‚Üí ‚áí</span>
<span title="therefore">‚à¥</span>
<span title="because">‚àµ</span>
<span title="ditto mark">„ÄÉ</span>
<span title="female sign">‚ôÄ</span>
<span title="male sign">‚ôÇ</span></span>
</p>
<p class="speciallang" id="edittools-Templates_and_Headers" style="display:none">
<span class="charinsert">{{en-noun}} {{en-adj}} {{en-verb}} {{en-adv}} {{en-proper¬†noun}} {{plural¬†of|+}} {{present¬†participle¬†of|+}} {{past¬†of|+}} {{comparative¬†of|+}} {{superlative¬†of|+}} {{misspelling¬†of|+}} {{inflected¬†form¬†of|+}} {{alternative¬†spelling¬†of|+}} {{trans-top|+}} {{trans-mid}} {{trans-bottom}} {{der-top|+}} {{der-mid}} {{der-bottom}} {{rel-top|+}} {{rel-mid}} {{rel-bottom}}</span><br/>
<span class="charinsert">===Alternative¬†forms=== ===Etymology=== ===Pronunciation=== ===Noun=== ===Adjective=== ===Verb=== ===Adverb=== ===Pronoun=== ===Preposition=== ====Usage¬†notes==== ====Synonyms==== ====Antonyms==== ====Derived¬†terms==== ====Related¬†terms==== ====Translations==== ===See¬†also=== ===References===</span>
</p>
<p class="speciallang" id="edittools-African" style="display:none">
<span class="charinsert">‚±≠ …ë ∆Å …ì ∆á ∆à ∆â …ñ ∆ä …ó ∆é «ù ∆ê …õ ∆ë ∆í ∆ì …† ∆î …£ ∆ñ …© ∆ó …® ∆ò ∆ô ≈ä ≈ã ∆ù …≤ ∆Ü …î ∆§ ∆• ∆©  É ∆¨ ∆≠ ∆Æ  à ∆±  ä ∆≤  ã ‚±≤ ‚±≥ ∆≥ ∆¥ ∆∑  í</span>
</p>
<p class="speciallang" id="edittools-Arabic" style="display:none">
<b>Letters</b>: <span class="charinsert Arab">ÿß ÿ£ ÿ• ÿ¢ Ÿ± ÿ® ÿ™ ÿ´ ÿ¨ ÿ≠ ÿÆ ÿØ ÿ∞ ÿ± ÿ≤ ÿ≥ ÿ¥ ÿµ ÿ∂ ÿ∑ ÿ∏ ÿπ ÿ∫ ŸÅ ŸÇ ŸÉ ŸÑ ŸÖ ŸÜ Ÿá Ÿà Ÿä ÿ© Ÿâ ÿ° ÿ§ ÿ¶ Ôªª Ô∑≤ ŸÄ ›£</span> ¬∑¬∑¬∑ <b>Persian</b>: <span class="charinsert fa-Arab">Ÿæ ⁄Ü ⁄ò ⁄© ⁄Ø €å </span> ¬∑¬∑¬∑ <b>Urdu</b>: <span class="charinsert ur-Arab">Ÿπ ⁄à ⁄ë ⁄∫ €í €ì €Å ⁄æ</span> ¬∑¬∑¬∑ <b>Kurdish</b>: <span class="charinsert ku-Arab">€ï ⁄ï ⁄í ⁄§ ⁄µ €Ü €ä €é</span>  ¬∑¬∑¬∑ <b>Vowels</b>: <small>fatha:</small> <span class="charinsert Arab">¬†Ÿé</span> <small>damma:</small> <span class="charinsert Arab">¬†Ÿè</span> <small>kasra:</small> <span class="charinsert Arab">¬†Ÿê</span> <small>fathatan:</small> <span class="charinsert Arab">¬†Ÿã</span> <small>dammatan:</small> <span class="charinsert Arab">¬†Ÿå</span> <small>kasratan:</small> <span class="charinsert Arab">¬†Ÿç</span> ‚Ä¢‚Ä¢‚Ä¢ <b>Other</b>: <small>shadda:</small> <span class="charinsert Arab">¬†Ÿë</span> <small>sukun:</small> <span class="charinsert Arab">¬†Ÿí</span> <small>maddah above:</small> <span class="charinsert Arab">¬†Ÿì</span> <small>hamza above:</small> <span class="charinsert">¬†Ÿî</span> <small>hamza below:</small> <span class="charinsert Arab">¬†Ÿï</span> <small>dagger alif:</small> <span class="charinsert Arab">¬†Ÿ∞</span>
<b>Arabic translit.</b>: <span class="charinsert"> æ ·πØ ·∏• ·∏µ ·∏è ≈° ·π£ ·∏ç ·π≠ ·∫ì  ø ·∏° ƒÅ ƒ´ ≈´ ƒì ≈ç √° √≠ √∫ √© √≥</span>
<b>Persian translit</b>: <span class="charinsert">‚Äô √¢ ≈° ≈æ ƒç ƒü</span>
</p>
<p class="speciallang" id="edittools-Armenian" style="display:none">
<span class="charinsert Armn">‘± ’° ‘≤ ’¢ ‘≥ ’£ ‘¥ ’§ ‘µ ’• ‘∂ ’¶ ‘∑ ’ß ‘∏ ’® ‘π ’© ‘∫ ’™ ‘ª ’´ ‘º ’¨ ‘Ω ’≠ ‘æ ’Æ ‘ø ’Ø ’Ä ’∞ ’Å ’± ’Ç ’≤ ’É ’≥ ’Ñ ’¥ ’Ö ’µ ’Ü ’∂ ’á ’∑ ’à ’∏ ’â ’π ’ä ’∫ ’ã ’ª ’å ’º ’ç ’Ω ’é ’æ ’è ’ø ’ê ÷Ä ’ë ÷Å ’í ÷Ç ’ì ÷É ’î ÷Ñ ’ï ÷Ö ’ñ ÷Ü ÷á Ô¨î   Ô¨ï   Ô¨ì   Ô¨ó   Ô¨ñ</span> ¬∑¬∑¬∑ <b>Dialectal</b>: <span class="charinsert Armn">’ô  ’°Ãà  ÷ÖÃà  ’∏Ãà÷Ç ’µÃµ   î</span> ¬∑¬∑¬∑ <b>Punctuation</b>: <span class="charinsert Armn">  ’ö   ’õ   ’ú   ’ù   ’û   ’ü   ‚Ä§   ÷â   ÷ä </span> ¬∑¬∑¬∑ <b>Symbols</b>: <span class="charinsert Armn">÷è ÷é ÷ç</span>
</p>
<p class="speciallang" id="edittools-Burmese" style="display:none">
<span class="charinsert Mymr">·ÄÄ ·ÄÅ ·ÄÇ ·ÄÉ ·ÄÑ ·ÄÖ ·ÄÜ ·Äá ·Äà ·Ää ·Äâ ·Äã ·Äå ·Äç ·Äé ·Äè ·Äê ·Äë ·Äí ·Äì ·Äî ·Äï ·Äñ ·Äó ·Äò ·Äô ·Äö ·Äõ ·Äú ·Äù ·Äû ·Äø ·Äü ·Ä° ·Ä£ ·Ä§ ·Ä• ·Ä¶ ·Äß ·Ä© ·Ä™ ¬†·ÄÑ·Ä∫·Äπ ¬†·Ä∫ ¬†·Äπ ¬†·Äª ¬†·Äº ¬†·ÄΩ ¬†·Äæ ¬†·Ä¨ ¬†·Ä´ ¬†·Ä≠ ¬†·ÄÆ ¬†·ÄØ ¬†·Ä∞ ¬†·Ä± ¬†·Ä≤ ¬†·Ä±·Ä¨ ¬†·Ä±·Ä´ ¬†·Ä≠·ÄØ ¬†·Ä∂ ¬†·Ä∑ ¬†·Ä∏ ·Åå ·Åç ·Åé ·Åè ·Åä ·Åã ·ÅÄ ·ÅÅ ·ÅÇ ·ÅÉ ·ÅÑ ·ÅÖ ·ÅÜ ·Åá ·Åà ·Åâ</span>
<br/><b><a href="/wiki/Appendix:Burmese_transliteration" title="Appendix:Burmese transliteration">Transliteration</a></b>: <span class="charinsert">ƒÅ √† √° ƒÉ ·∏ç √® √© ƒ´ √¨ √≠ ·∏∑ ·πÉ √± ·πÖ ·πá √≤ √≥ ·π≠ ≈´ √π √∫  î ‚Äô ‚Äò ‚Ä≤ ‚Ä≥</span>
</p>
<p class="speciallang" id="edittools-Cherokee" style="display:none">
<span class="charinsert Cher">·é† ·é° ·é¢ ·é£ ·é§ ·é• ·é¶ ·éß ·é® ·é© ·é™ ·é´ ·é¨ ·é≠ ·éÆ ·éØ ·é∞ ·é± ·é≤ ·é≥ ·é¥ ·éµ ·é∂ ·é∑ ·é∏ ·éπ ·é∫ ·éª ·éº ·éΩ ·éæ ·éø ·èÄ ·èÅ ·èÇ ·èÉ ·èÑ ·èÖ ·èÜ ·èá ·èà ·èâ ·èä ·èã ·èå ·èç ·èé ·èè ·èê ·èë ·èí ·èì ·èî ·èï ·èñ ·èó ·èò ·èô ·èö ·èõ ·èú ·èù ·èû ·èü ·è† ·è° ·è¢ ·è£ ·è§ ·è• ·è¶ ·èß ·è® ·è© ·è™ ·è´ ·è¨ ·è≠ ·èÆ ·èØ ·è∞ ·è± ·è≤ ·è≥ ·è¥</span>
</p>
<p class="specialbasic" id="edittools-Cyrillic">
<span class="charinsert Cyrl">–ê –∞ –ë –± –í –≤ –ì –≥ –É —ì “ê “ë –î –¥ –Ç —í –ï –µ –Å —ë –Ñ —î –ñ –∂ –ó –∑ –Ö —ï –óÃÅ –∑ÃÅ –ò –∏ –Ü —ñ –á —ó –ô –π –à —ò –ö –∫ –å —ú –õ –ª –â —ô –ú –º –ù –Ω –ä —ö –û –æ –ü –ø –† —Ä –° —Å ƒÜ ƒá –¢ —Ç –ã —õ –£ —É –é —û –§ —Ñ –• —Ö –¶ —Ü –ß —á –è —ü –® —à –© —â –™ —ä –´ —ã –¨ —å –≠ —ç –Æ —é –Ø —è ‚Äô</span> <small>m-dash:</small><span class="charinsert Cyrl">‚Äî</span> <small>acute:</small><span class="charinsert Cyrl" style="font-size:16pt;vertical-align:sub">¬†ÃÅ</span> <small>grave:</small><span class="charinsert Cyrl" style="font-size:16pt;vertical-align:sub">¬†ÃÄ</span> <small>macron:</small><span class="charinsert Cyrl" style="font-size:16pt;vertical-align:sub">¬†ÃÑ</span> <small>double grave:</small><span class="charinsert Cyrl" style="font-size:16pt;vertical-align:sub">¬†Ãè</span> <small>inverted breve:</small><span class="charinsert Cyrl" style="font-size:16pt;vertical-align:sub">¬†Ãë</span> <span class="charinsert Cyrl">–êÃÅ –∞ÃÅ –ïÃÅ –µÃÅ –ÑÃÅ —îÃÅ –òÃÅ –∏ÃÅ –ÜÃÅ —ñÃÅ –áÃÅ —óÃÅ –ûÃÅ –æÃÅ –†ÃÅ —ÄÃÅ –£ÃÅ —ÉÃÅ –™ÃÅ —äÃÅ –´ÃÅ —ãÃÅ –≠ÃÅ —çÃÅ –ÆÃÅ —éÃÅ –ØÃÅ —èÃÅ</span> <span class="charinsert Cyrl">–êÃÄ –∞ÃÄ –Ä —ê –ÑÃÄ —îÃÄ –ç —ù –ÜÃÄ —ñÃÄ –áÃÄ —óÃÄ –ûÃÄ –æÃÄ –†ÃÄ —ÄÃÄ –£ÃÄ —ÉÃÄ –™ÃÄ —äÃÄ –´ÃÄ —ãÃÄ –≠ÃÄ —çÃÄ –ÆÃÄ —éÃÄ –ØÃÄ —èÃÄ</span>
<br/><b>Non-Slavic</b>: <span class="charinsert Cyrl">”í ”ì ”ê ”ë ”î ”ï ”† ”° ”∂ ”∑ ”¢ ”£ “ä “ã ‘§ ‘• ”Æ ”Ø “î “ï “í “ì –ïÃÉ –µÃÉ “º “Ω “æ “ø ”ò ”ô ”ö ”õ “ñ “ó ”ú ”ù ”Å ”Ç “ò “ô ”û ”ü “ä “ã –òÃÉ –∏ÃÉ ”Ä ”è “û “ü “† “° “ö “õ ”É ”Ñ ”Ö ”Ü ‘í ‘ì “¢ “£ “§ “• ”á ”à “∫ “ª “® “© ”® ”© ”™ ”´ ”¶ ”ß –ûÃÉ –æÃÉ –†Ãå —ÄÃå “é “è “™ “´ “¨ “≠ ”∞ ”± “Æ “Ø “∞ “± “≤ “≥ ”º ”Ω ”æ ”ø “å “ç ”∏ ”π “¥ “µ “∂ “∑ ”¥ ”µ ”ã ”å ”¨ ”≠ –ÑÃà —îÃà –ÆÃÜ —éÃÜ –ØÃÜ —èÃÜ ÀÆ </span>
<br/><b>Archaic</b>: <span class="charinsert Cyrl">“Ä “Å —∫ —ª —† —° —æ —ø Íôê Íôë —¢ —£ Íôí Íôì Íôñ Íôó —§ —• —¶ —ß —® —© —™ —´ —¨ —≠ —Æ —Ø —∞ —± —≤ —≥ —¥ —µ —∂ —∑ Íôû Íôü</span>
<br/><b>Transliteration</b>: <span class="charinsert Cyrl">≈Ω ≈æ ƒå ƒç ≈† ≈°  π  ∫ √Å √° «ç «é «çÃÄ «éÃÄ √â √© √ç √≠ √ì √≥ √ö √∫ √ù √Ω …õ …õÃÅ «¥ «µ ·∏∞ ·∏± ≈¨ ≈≠</span>
</p>
<p class="speciallang" id="edittools-Devan.C4.81gar.C4.AB" style="display:none">
<span class="charinsert Deva">¬†‡§Å ¬†‡§Ç ¬†‡§É ‡§Ö ‡§Ü ‡§á ‡§à ‡§â ‡§ä ‡§ã ‡§å ‡§ç ‡§é ‡§è ‡§ê ‡§ë ‡§í ‡§ì ‡§î ‡§ï ‡§ï‡§º ‡§ñ ‡§ñ‡§º ‡§ó ‡§ó‡§º ‡§ò ‡§ô ‡§ö ‡§õ ‡§ú ‡§ú‡§º ‡§ù	‡§ù‡§º ‡§û ‡§ü ‡§† ‡§° ‡§°‡§º ‡§¢ ‡§¢‡§º ‡§£ ‡§§ ‡§• ‡§¶ ‡§ß ‡§® ‡§© ‡§™ ‡§´ ‡§´‡§º ‡§¨ ‡§≠ ‡§Æ ‡§Ø ‡§Ø‡§º ‡§∞ ‡§± ‡§≤ ‡§≥ ‡§¥ ‡§µ ‡§∂ ‡§∑ ‡§∏ ‡§π ¬†‡§º ‡§Ω ¬†‡§æ ¬†‡§ø ¬†‡•ä ¬†‡•ã ¬†‡•å ¬†‡•ç ¬†‡•Ä ¬†‡•Å ¬†‡•Ç ¬†‡•É ¬†‡•Ñ ¬†‡•Ö ¬†‡•Ü ¬†‡•á ¬†‡•à ¬†‡•â ‡•ê ¬†‡•ë ¬†‡•í ¬†‡•ì ¬†‡•î ‡•† ‡•° ¬†‡•¢ ¬†‡•£ ‡•§ ‡•• ‡•∞</span> ...

<br/><b><a href="/wiki/Wiktionary:Hindi_transliteration" title="Wiktionary:Hindi transliteration">Transliteration</a></b>: <span class="charinsert">ƒÅ ·∏ç ƒ° ·∏• ƒ´ ·∏∑ ·∏π ·πÉ √± ·πÖ ·πá ≈ï ·πõ ·πù ≈õ ·π£ ·π≠ ≈´</span> . <span class="charinsert">ƒÄ ·∏å ƒ† ·∏§ ƒ™ ·∏∂ ·∏∏ ·πÇ √ë ·πÑ ·πÜ ≈î ·πö ·πú ≈ö ·π¢ ·π¨ ≈™ </span> .
<br/><span class="charinsert"> √£ ƒÅÃÉ ·∫Ω ƒ© ƒ´ÃÉ √µ ≈© ≈´ÃÉ</span> . <span class="charinsert"> √É ƒÄÃÉ ·∫º ƒ® ƒ™ÃÉ √µ ≈® ≈™ÃÉ</span>
</p>
<p class="speciallang" id="edittools-Ethiopic" style="display:none">
<span class="charinsert Ethi">·àÄ ·àÅ ·àÇ ·àÉ ·àÑ ·àÖ ·àÜ ·àá ·àà ·àâ ·àä ·àã ·àå ·àç ·àé ·àè ·àê ·àë ·àí ·àì ·àî ·àï ·àñ ·àó ·àò ·àô ·àö ·àõ ·àú ·àù ·àû ·àü ·à† ·à° ·à¢ ·à£ ·à§ ·à• ·à¶ ·àß ·à® ·à© ·à™ ·à´ ·à¨ ·à≠ ·àÆ ·àØ ·à∞ ·à± ·à≤ ·à≥ ·à¥ ·àµ ·à∂ ·à∑ ·à∏ ·àπ ·à∫ ·àª ·àº ·àΩ ·àæ ·àø ·âÄ ·âÅ ·âÇ ·âÉ ·âÑ ·âÖ ·âÜ ·âá ·âà ·âä ·âã ·âå ·âç ·âê ·âë ·âí ·âì ·âî ·âï ·âñ ·âò ·âö ·âõ ·âú ·âù ·â† ·â° ·â¢ ·â£ ·â§ ·â• ·â¶ ·âß ·â® ·â© ·â™ ·â´ ·â¨ ·â≠ ·âÆ ·âØ ·â∞ ·â± ·â≤ ·â≥ ·â¥ ·âµ ·â∂ ·â∑ ·â∏ ·âπ ·â∫ ·âª ·âº ·âΩ ·âæ ·âø ·äÄ ·äÅ ·äÇ ·äÉ ·äÑ ·äÖ ·äÜ ·äá ·äà ·ää ·äã ·äå ·äç ·äê ·äë ·äí ·äì ·äî ·äï ·äñ ·äó ·äò ·äô ·äö ·äõ ·äú ·äù ·äû ·äü ·ä† ·ä° ·ä¢ ·ä£ ·ä§ ·ä• ·ä¶ ·äß ·ä® ·ä© ·ä™ ·ä´ ·ä¨ ·ä≠ ·äÆ ·äØ ·ä∞ ·ä≤ ·ä≥ ·ä¥ ·äµ ·ä∏ ·äπ ·ä∫ ·äª ·äº ·äΩ ·äæ ·ãÄ ·ãÇ ·ãÉ ·ãÑ ·ãÖ ·ãà ·ãâ ·ãä ·ãã ·ãå ·ãç ·ãé ·ãè ·ãê ·ãë ·ãí ·ãì ·ãî ·ãï ·ãñ ·ãò ·ãô ·ãö ·ãõ ·ãú ·ãù ·ãû ·ãü ·ã† ·ã° ·ã¢ ·ã£ ·ã§ ·ã• ·ã¶ ·ãß ·ã® ·ã© ·ã™ ·ã´ ·ã¨ ·ã≠ ·ãÆ ·ãØ ·ã∞ ·ã± ·ã≤ ·ã≥ ·ã¥ ·ãµ ·ã∂ ·ã∑ ·ã∏ ·ãπ ·ã∫ ·ãª ·ãº ·ãΩ ·ãæ ·ãø ·åÄ ·åÅ ·åÇ ·åÉ ·åÑ ·åÖ ·åÜ ·åá ·åà ·åâ ·åä ·åã ·åå ·åç ·åé ·åè ·åê ·åí ·åì ·åî ·åï ·åò ·åô ·åö ·åõ ·åú ·åù ·åû ·åü ·å† ·å° ·å¢ ·å£ ·å§ ·å• ·å¶ ·åß ·å® ·å© ·å™ ·å´ ·å¨ ·å≠ ·åÆ ·åØ ·å∞ ·å± ·å≤ ·å≥ ·å¥ ·åµ ·å∂ ·å∑ ·å∏ ·åπ ·å∫ ·åª ·åº ·åΩ ·åæ ·åø ·çÄ ·çÅ ·çÇ ·çÉ ·çÑ ·çÖ ·çÜ ·çá ·çà ·çâ ·çä ·çã ·çå ·çç ·çé ·çè ·çê ·çë ·çí ·çì ·çî ·çï ·çñ ·çó ·çò ·çô ·çö ·ç† ·ç° ·ç¢ ·ç£ ·ç§ ·ç• ·ç¶ ·çß ·ç® ·ç© ·ç™ ·ç´ ·ç¨ ·ç≠ ·çÆ ·çØ ·ç∞ ·ç± ·ç≤ ·ç≥ ·ç¥ ·çµ ·ç∂ ·ç∑ ·ç∏ ·çπ ·ç∫ ·çª ·çº ·éê ·éë ·éí ·éì ·éî ·éï ·éñ ·éó ·éò ·éô </span>
</p>
<p class="speciallang" id="edittools-Georgian" style="display:none">
<span class="charinsert Geor">·Éê ·Éë ·Éí ·Éì ·Éî ·Éï ·Éñ ·Éó ·Éò ·Éô ·Éö ·Éõ ·Éú ·Éù ·Éû ·Éü ·É† ·É° ·É¢ ·É£ ·É§ ·É• ·É¶ ·Éß ·É® ·É© ·É™ ·É´ ·É¨ ·É≠ ·ÉÆ ·ÉØ ·É∞</span>
</p>
<p class="speciallang" id="edittools-Gothic" style="display:none">
<span class="charinsert Goth">êå∞ êå± êå≤ êå≥ êå¥ êåµ êå∂ êå∑ êå∏ êåπ êå∫ êåª êåº êåΩ êåæ êåø êçÄ êçÅ êçÇ êçÉ êçÑ êçÖ êçÜ êçá êçà êçâ êçä</span> ¬∑¬∑¬∑ <span class="charinsert">√û √æ «∂ ∆ï</span>
</p>
<p class="specialbasic" id="edittools-Greek">
<b>Plain</b>: <span class="charinsert Grek">Œë Œ± Œí Œ≤ Œì Œ≥ Œî Œ¥ Œï Œµ Œñ Œ∂ Œó Œ∑ Œò Œ∏ Œô Œπ Œö Œ∫ Œõ Œª Œú Œº Œù ŒΩ Œû Œæ Œü Œø Œ† œÄ Œ° œÅ Œ£ œÉ œÇ Œ§ œÑ Œ• œÖ Œ¶ œÜ Œß œá Œ® œà Œ© œâ</span> ¬∑ <span class="charinsert polytonic">·æº ·æ≥ ·øå ·øÉ ·øº ·ø≥</span> ¬∑ Acute: <span class="charinsert Grek">ŒÜ Œ¨ Œà Œ≠ Œâ ŒÆ Œä ŒØ Œå œå Œé œç Œè œé</span> ¬∑ <span class="charinsert polytonic">·æ¥ ·øÑ ·ø¥</span> ¬∑ Grave: <span class="charinsert polytonic">·æ∫ ·Ω∞ ·øà ·Ω≤ ·øä ·Ω¥ ·øö ·Ω∂ ·ø∏ ·Ω∏ ·ø™ ·Ω∫ ·ø∫ ·Ωº</span> ¬∑ <span class="charinsert polytonic">·æ≤ ·øÇ ·ø≤</span> ¬∑ Circumflex: <span class="charinsert polytonic">·æ∂ ·øÜ ·øñ ·ø¶ ·ø∂</span> ¬∑ <span class="charinsert polytonic">·æ∑ ·øá ·ø∑</span> ¬∑¬∑¬∑ 
<b>With smooth breathing</b>: Plain: <span class="charinsert polytonic">·ºà ·ºÄ ·ºò ·ºê ·º® ·º† ·º∏ ·º∞ ·Ωà ·ΩÄ ·Ωê ·Ω® ·Ω†</span> ¬∑ <span class="charinsert polytonic">·æà ·æÄ ·æò ·æê ·æ® ·æ†</span> ¬∑ Acute: <span class="charinsert polytonic">·ºå ·ºÑ ·ºú ·ºî ·º¨ ·º§ ·ºº ·º¥ ·Ωå ·ΩÑ ·Ωî ·Ω¨ ·Ω§</span> ¬∑ <span class="charinsert polytonic">·æå ·æÑ ·æú ·æî ·æ¨ ·æ§</span> ¬∑ Grave: <span class="charinsert polytonic">·ºä ·ºÇ ·ºö ·ºí ·º™ ·º¢ ·º∫ ·º≤ ·Ωä ·ΩÇ ·Ωí ·Ω™ ·Ω¢</span> ¬∑ <span class="charinsert polytonic">·æä ·æÇ ·æö ·æí ·æ™ ·æ¢</span> ¬∑ Circumflex: <span class="charinsert polytonic">·ºé ·ºÜ ·ºÆ ·º¶ ·ºæ ·º∂ ·Ωñ ·ΩÆ ·Ω¶</span> ¬∑ <span class="charinsert polytonic">·æé ·æÜ ·æû ·æñ ·æÆ ·æ¶</span> ¬∑¬∑¬∑ 
<b>With rough breathing</b>: Plain: <span class="charinsert polytonic">·ºâ ·ºÅ ·ºô ·ºë ·º© ·º° ·ºπ ·º± ·Ωâ ·ΩÅ ·Ωô ·Ωë ·Ω© ·Ω°</span> ¬∑ <span class="charinsert polytonic">·æâ ·æÅ ·æô ·æë ·æ© ·æ°</span> ¬∑ <span class="charinsert polytonic">·ø¨ ·ø•</span> ¬∑ Acute: <span class="charinsert polytonic">·ºç ·ºÖ ·ºù ·ºï ·º≠ ·º• ·ºΩ ·ºµ ·Ωç ·ΩÖ ·Ωù ·Ωï ·Ω≠ ·Ω•</span> ¬∑ <span class="charinsert polytonic">·æç ·æÖ ·æù ·æï ·æ≠ ·æ•</span> ¬∑ Grave: <span class="charinsert polytonic">·ºã ·ºÉ ·ºõ ·ºì ·º´ ·º£ ·ºª ·º≥ ·Ωã ·ΩÉ ·Ωõ ·Ωì ·Ω´ ·Ω£</span> ¬∑ <span class="charinsert polytonic">·æã ·æÉ ·æõ ·æì ·æ´ ·æ£</span> ¬∑ Circumflex: <span class="charinsert polytonic">·ºè ·ºá ·ºØ ·ºß ·ºø ·º∑ ·Ωü ·Ωó ·ΩØ ·Ωß</span> ¬∑ <span class="charinsert polytonic">·æè ·æá ·æü ·æó ·æØ ·æß</span> ¬∑¬∑¬∑ 
<b>Diaeresis</b>: <span class="charinsert polytonic">œä Œê ·øí ·øó œã Œ∞ ·ø¢ ·øß</span> ¬∑ <b>Long/short</b>: <span class="charinsert polytonic">·æ∞ ·æ± ·øê ·øë ·ø† ·ø° ·æ∏ ·æπ ·øò ·øô ·ø® ·ø©</span> ¬∑¬∑¬∑ 
<b>Archaic letters</b>: <span class="charinsert polytonic">œú œù œò œô œû œü œ† œ° œö œõ œó</span> ¬∑¬∑¬∑ 
<b>Variant forms</b>: <span title="curled beta" class="charinsert polytonic">œê</span> <span title="mathematical delta" class="charinsert polytonic">‚àÇ</span> <span title="lunate epsilon" class="charinsert polytonic">œµ</span> <span title="script theta" class="charinsert polytonic">œë</span> <span title="cursive kappa" class="charinsert polytonic">œ∞</span> <span title="variant pi" class="charinsert polytonic">œñ</span> <span title="curled rho" class="charinsert polytonic">œ±</span> <span title="lunate sigma" class="charinsert polytonic">œ≤</span> <span title="curled capital upsilon" class="charinsert polytonic">œí</span> <span title="mathematical phi" class="charinsert polytonic">œï</span> <span title="ŒøœÖ ligatures" class="charinsert polytonic">»¢ »£</span>
</p>
<p class="speciallang" id="edittools-Hebrew" style="display:none">
<b>Letters</b>: <span class="charinsert Hebr">◊ê ◊ë ◊í ◊ì ◊î ◊ï ◊ñ ◊ó ◊ò ◊ô ◊õ ◊ö ◊ú ◊û ◊ù ◊† ◊ü ◊° ◊¢ ◊§ ◊£ ◊¶ ◊• ◊ß ◊® ◊© ◊©◊Å ◊©◊Ç ◊™</span> ¬∑¬∑¬∑ <b>Marks</b>: <small>dag√©sh:</small>¬†<span class="charinsert Hebr">¬†÷º</span> <small>g√©resh:</small>¬†<span class="charinsert">◊≥</span> <small>gersh√°yim:</small>¬†<span class="charinsert">◊¥</span> <small>mak√°f:</small>¬†<span class="charinsert">÷æ</span> <small>sof pas√∫k:</small>¬†<span class="charinsert">◊É</span> ¬∑¬∑¬∑ <b>Vowels</b>: <small>kam√°ts:</small>¬†<span class="charinsert Hebr">¬†÷∏</span> <small>pat√°kh:</small>¬†<span class="charinsert Hebr">¬†÷∑</span> <small>tseir√©i:</small>¬†<span class="charinsert Hebr">¬†÷µ</span> <small>seg√≥l:</small>¬†<span class="charinsert Hebr">¬†÷∂</span> <small>khir√≠k:</small>¬†<span class="charinsert Hebr">¬†÷¥</span> <small>khol√°m:</small>¬†<span class="charinsert Hebr">¬†÷π</span> <small>kub√∫ts:</small>¬†<span class="charinsert Hebr">¬†÷ª</span> <small>sh'v√°:</small>¬†<span class="charinsert Hebr">¬†÷∞</span> <small>khat√°f-kam√°ts:</small>¬†<span class="charinsert Hebr">¬†÷≥</span> <small>khat√°f-pat√°kh:</small>¬†<span class="charinsert Hebr">¬†÷≤</span> <small>khat√°f-seg√≥l:</small>¬†<span class="charinsert Hebr">¬†÷±</span> ¬∑¬∑¬∑ <b>Accents</b>: <small>r√°fe:</small>¬†<span class="charinsert Hebr">¬†÷ø</span> <small>dot above:</small>¬†<span class="charinsert Hebr">¬†◊Ñ</span> <small>m√©teg:</small>¬†<span class="charinsert Hebr">¬†÷Ω</span> ¬∑¬∑¬∑ <b>Ligatures</b>: <span class="charinsert">◊≤÷∑</span> ¬∑¬∑¬∑ <b>Translit.</b>: <span class="charinsert">√° √© √≠ √≥ √∫</span> ¬∑¬∑¬∑ <b>Scholarly</b>: <span class="charinsert"> æ ·∏á ·∏° ·∏è ·∏• ·π≠ ·∏µ  ø pÃÑ ·π£ ·∏≥ ≈° ≈õ ·πØ …ô ·µä ƒÉ ƒï ≈è ƒÅ ƒì ƒ´ ≈ç ≈´ √¢ √™ √Æ √¥ √ª ƒÅÃÅ ·∏ó ƒ´ÃÅ ·πì ≈´ÃÅ</span> ¬∑¬∑¬∑ <b>Misc. tr.</b>: <span class="charinsert">·∏ç ·∫ì ƒç ≈æ</span>
</p>
<p class="speciallang" id="edittools-Italic" style="display:none">
<b>Letters</b>: <span class="charinsert Ital">êåÄ êåÅ êåÇ êåÉ êåÑ êåÖ êåÜ êåá êåà êåâ êåä êåã êåå êåç êåé êåè êåê êåë êåí êåì êåî êåï êåñ êåó êåò êåô êåö êåõ êåú êåù êåû êåü</span> ¬∑¬∑¬∑ <b>Numerals</b>: <span class="charinsert Ital">êå† êå° êå¢ êå£</span>
</p>
<p class="speciallang" id="edittools-Japanese_Kana" style="display:none">
<b>Hiragana</b>: <span class="charinsert Jpan">„ÅÅ „ÅÇ „ÅÉ „ÅÑ „ÅÖ „ÅÜ „Åá „Åà „Åâ „Åä „Åã „Åå „Åç „Åé „Åè „Åê „Åë „Åí „Åì „Åî „Åï „Åñ „Åó „Åò „Åô „Åö „Åõ „Åú „Åù „Åû „Åü „Å† „Å° „Å¢ „Å£ „Å§ „Å• „Å¶ „Åß „Å® „Å© „Å™ „Å´ „Å¨ „Å≠ „ÅÆ „ÅØ „Å∞ „Å± „Å≤ „Å≥ „Å¥ „Åµ „Å∂ „Å∑ „Å∏ „Åπ „Å∫ „Åª „Åº „ÅΩ „Åæ „Åø „ÇÄ „ÇÅ „ÇÇ „ÇÉ „ÇÑ „ÇÖ „ÇÜ „Çá „Çà „Çâ „Çä „Çã „Çå „Çç „Çé „Çè „Çê „Çë „Çí „Çì „Çõ „Çú „Çù „Çû „Çü</span> ¬∑¬∑¬∑
<b>Katakana</b>: <span class="charinsert Jpan">„Ç° „Ç¢ „Ç£ „Ç§ „Ç• „Ç¶ „Çß „Ç® „Ç© „Ç™ „Ç´ „Ç¨ „Ç≠ „ÇÆ „ÇØ „Ç∞ „Ç± „Ç≤ „Ç≥ „Ç¥ „Çµ „Ç∂ „Ç∑ „Ç∏ „Çπ „Ç∫ „Çª „Çº „ÇΩ „Çæ „Çø „ÉÄ „ÉÅ „ÉÇ „ÉÉ „ÉÑ „ÉÖ „ÉÜ „Éá „Éà „Éâ „Éä „Éã „Éå „Éç „Éé „Éè „Éê „Éë „Éí „Éì „Éî „Éï „Éñ „Éó „Éò „Éô „Éö „Éõ „Éú „Éù „Éû „Éü „É† „É° „É¢ „É£ „É§ „É• „É¶ „Éß „É® „É© „É™ „É´ „É¨ „É≠ „ÉÆ „ÉØ „É∞ „É± „É≤ „É≥ „É¥ „Éµ „É∂ „Éª „Éº „ÉΩ „Éæ „Éø</span>
</p>
<p class="speciallang" id="edittools-Khmer" style="display:none">
<span class="charinsert Khmr">·ûÄ ·ûÅ ·ûÇ ·ûÉ ·ûÑ ·ûÖ ·ûÜ ·ûá ·ûà ·ûâ ·ûä ·ûã ·ûå ·ûç ·ûé ·ûè ·ûê ·ûë ·ûí ·ûì ·ûî ·ûï ·ûñ ·ûó ·ûò ·ûô ·ûö ·ûõ ·ûú ·ûù ·ûû ·ûü ·û† ·û° ·û¢ ·û£ ·û§ ·û• ·û¶ ·ûß ·û® ·û© ·û™ ·û´ ·û¨ ·û≠ ·ûÆ ·ûØ ·û∞ ·û± ·û≤ ·û≥ ·üî ·üï ·üñ ·üó ·üò ·üô ·üö ·üõ ·üú ¬†·üù ·ü† ·ü° ·ü¢ ·ü£ ·ü§ ·ü• ·ü¶ ·üß ·ü® ·ü© ·ü∞ ·ü± ·ü≤ ·ü≥ ·ü¥ ·üµ ·ü∂ ·ü∑ ·ü∏ ·üπ
¬†¬†·û¥¬†·ûµ¬†·û∂¬†·û∑¬†·û∏¬†·ûπ¬†·û∫¬†·ûª¬†·ûº¬†·ûΩ¬†·ûæ¬†·ûø¬†·üÄ¬†·üÅ¬†·üÇ¬†·üÉ¬†·üÑ¬†·üÖ¬†·üÜ¬†·üá¬†·üà¬†·üâ¬†·üä¬†·üã¬†·üå¬†·üç¬†·üé¬†·üè¬†·üê¬†·üë¬†·üí¬†·üì¬†</span>
</p>
<p class="speciallang" id="edittools-Korean_Jamo" style="display:none">
<b>Korean Jamo</b>: <span class="charinsert Kore">„Ñ± „Ñ≤ „Ñ≥ „Ñ¥ „Ñµ „Ñ∂ „Ñ∑ „Ñ∏ „Ñπ „Ñ∫ „Ñª „Ñº „ÑΩ „Ñæ „Ñø „ÖÄ „ÖÅ „ÖÇ „ÖÉ „ÖÑ „ÖÖ „ÖÜ „Öá „Öà „Öâ „Öä „Öã „Öå „Öç „Öé „Öè „Öë „Öí „Öì „Öî „Öï „Öñ „Öó „Öò „Öô „Öö „Öõ „Öú „Öù „Öû „Öü „Ö† „Ö° „Ö¢ „Ö£ „Ö§ „Ö• „Ö¶ „Öß „Ö® „Ö© „Ö™ „Ö´ „Ö¨ „Ö≠ „ÖÆ „ÖØ „Ö∞ „Ö± „Ö≤ „Ö≥ „Ö¥ „Öµ „Ö∂ „Ö∑ „Ö∏ „Öπ „Ö∫ „Öª „Öº „ÖΩ „Öæ „Öø „ÜÄ „ÜÅ „ÜÇ „ÜÉ „ÜÑ „ÜÖ „ÜÜ „Üá „Üà „Üâ „Üä „Üã „Üå „Üç „Üé</span>
</p>
<p class="speciallang" id="edittools-Lao" style="display:none">
<span class="charinsert Laoo">‡∫Å ‡∫Ç ‡∫Ñ ‡∫á ‡∫à ‡∫™ ‡∫ä ‡∫ç ‡∫î ‡∫ï ‡∫ñ ‡∫ó ‡∫ô ‡∫ö ‡∫õ ‡∫ú ‡∫ù ‡∫û ‡∫ü ‡∫° ‡∫¢ ‡∫• ‡∫ß ‡∫´ ‡∫≠ ‡∫Æ</span> ¬∑¬∑¬∑ <b>Ligatures</b>: <span class="charinsert Laoo">‡∫´‡∫º ‡ªú ‡ªù</span> ¬∑¬∑¬∑ <b>Vowel nuclei</b>: <span class="charinsert Laoo"> ‡∫∞   ‡∫± ‡∫≤   ‡∫¥   ‡∫µ   ‡∫∂   ‡∫∑   ‡∫∏   ‡∫π  ‡ªÄ ‡ªÅ ‡ªÇ   ‡∫ª   ‡ªç  ‡ªÑ ‡ªÉ ‡∫Ω   ‡∫≥</span> ¬∑¬∑¬∑ <b>Tone marks</b>: <span class="charinsert Laoo">  ‡ªà   ‡ªâ   ‡ªã   ‡ªä</span>
</p>
<p class="speciallang" id="edittools-Proto_languages" style="display:none">
<b>Common</b>: <span class="charinsert">√° √© √≠ √≥ √∫ ƒÅ ƒì ƒ´ ≈ç ≈´ ƒÅÃÅ ·∏ó ƒ´ÃÅ ·πì ≈´ÃÅ …ô ƒç ≈° ≈æ</span>
<b>Balto-Slavic</b>: <span class="charinsert">≈õ ≈∫ ÀÄ</span>
<b>Celtic</b>: <span class="charinsert">…∏  ∑</span>
<b>Germanic</b>: <span class="charinsert">√æ √™ √¥ ƒÖ ƒØ ≈≥ ƒØÃÑ «≠ «´ÃÇ</span>
<b>Indo-European</b>: <span class="charinsert">·∏± «µ  ∞  ∑ ‚ÇÅ ‚ÇÇ ‚ÇÉ lÃ• rÃ• mÃ• nÃ• ≈ïÃ• ƒ∫Ã• ·∏øÃ• ≈ÑÃ•</span>
<b>Italic</b>: <span class="charinsert">Œ≤ √∞ …£  ∑</span>
<b>Semitic</b>: <span class="charinsert"> æ √∞ ·∏• ·∏´ Œ∏Ã£  ø ƒ£ ·π£ ·π£ÃÅ ≈° ≈õ Œ∏</span>
<b>Slavic</b>: <span class="charinsert">≈• ƒè ƒõ ƒô «´ —å —ä</span>
<b>Other</b>: <span class="charinsert">¬∑</span>
</p>
<p class="speciallang" id="edittools-Sign_languages" style="display:none">
<b>Postures</b>: <small>shape</small> <span title="Common named handshapes"><span class="charinsert">1 3 Bent3 4 5 Claw5 6 7 8 Open8 9 Flat9 A OpenA B BentB FlatB OpenB C FlatC SmallC D E G H I K L M OpenM N O FlatO SmallO R S T V BentV X OpenX Y ILY Corna</span></span> <b><big><span class="charinsert">@</span></big></b> <small>location <span style="background-color:#e2e4c0" title="location on or near the other hand or the body">on (or <span title="Proximity from opposite hand, used only if not in contact"><span class="charinsert">Near From Distal</span></span>) the (<span title="Zone of the opposite hand"><span class="charinsert">In Back Radial Ulnar Tip Base</span></span> zone of) opposite hand's <span title="Hand part, for locations on the opposite hand or to specify a part of the hand facing some direction below"><span class="charinsert">Forearm Wrist Hand Finger Thumb Palm</span></span> or body <span class="charinsert">Backhead Top Forehead Sfhead Nose Cheek Ear Mouth Lip Jaw Chin Neck Shoulder Sternum Chest Trunk Abdomen Upperarm Forearm Leg</span></span>, or <span style="background-color:#c0cfe4">in space (<span title="Proximity in space, only used if hand is not about an elbow&#39;s distance from the body"><span class="charinsert">Near Distal Extend</span></span>) <span title="Side-to-side specification, combined with height"><span class="charinsert">Center Inside Side Left1 Left2 Left3 Right1 Right2 Right3</span></span> at <span title="Height, combined with preceding side-to-side specification"><span class="charinsert">Tophigh Foreheadhigh Nosehigh Mouthhigh Chinhigh Neckhigh Sternumhigh Chesthigh Trunkhigh Abdomenhigh</span></span></span></small> <span style="background-color:#c0e4c0"><b><big><span class="charinsert">-</span></big></b> <small>orientation <span class="charinsert">Finger Thumb Palm</span> facing <span title="Specify a hand part from above, then one of these facing directions"><span class="charinsert">Forward Back Up Down Across Aside</span></span></small></span> <b>Moves</b>: <small><span title="Contour, used if the the hand does not move in a straight, direct path, followed by plane" style="background-color:#e4d4c0"><span class="charinsert">Round Seven Circles</span> along <span title="After contour, specify a plane"><span class="charinsert">Horiz Vert Midline Surface Oblique</span></span></span> ... <span title="Quality of movement, if unusual"><span class="charinsert">Slow Fast Accel Tense Small Large Contact</span></span> ... <span title="Local movement of fingers or wrist"><span class="charinsert">Wiggle Hook Flatten Twist Nod Release Rub Squeeze</span></span> ... <span title="Repeated movements as shortcuts to specifying two postures repeatedly"><span class="charinsert">Sidetoside Frontandback Upanddown</span></span></small></p>
<p class="speciallang" id="edittools-Sinhala" style="display:none">
<span class="charinsert Sinh">‡∂Ö ‡∂Ü ‡∂á ‡∂à ‡∂â ‡∂ä ‡∂ã ‡∂å ‡∂ç ‡∂é ‡∂è ‡∂ê ‡∂ë ‡∂í ‡∂ì ‡∂î ‡∂ï ‡∂ñ ‡∂ö ‡∂õ ‡∂ú ‡∂ù ‡∂û ‡∂ü ‡∂† ‡∂° ‡∂¢ ‡∂£ ‡∂§ ‡∂• ‡∂¶ ‡∂ß ‡∂® ‡∂© ‡∂™ ‡∂´ ‡∂¨ ‡∂≠ ‡∂Æ ‡∂Ø ‡∂∞ ‡∂± ‡∂≥ ‡∂¥ ‡∂µ ‡∂∂ ‡∂∑ ‡∂∏ ‡∂π ‡∂∫ ‡∂ª ‡∂Ω ‡∑Ä ‡∑Å ‡∑Ç ‡∑É ‡∑Ñ ‡∑Ö ‡∑Ü ‡∑¥
¬†‡∂Ç ¬†‡∂É ¬†‡∑ä ¬†‡∑è ¬†‡∑ê ¬†‡∑ë ¬†‡∑í ¬†‡∑ì ¬†‡∑î ¬†‡∑ñ ¬†‡∑ò ¬†‡∑ô ¬†‡∑ö ¬†‡∑õ ¬†‡∑ú ¬†‡∑ù ¬†‡∑û ¬†‡∑ü ¬†‡∑≤ ¬†‡∑≥ </span>
</p>
<p class="speciallang" id="edittools-Syriac" style="display:none">
<span class="charinsert Syrc">‹ê ‹í ‹ì ‹ï ‹ó ‹ò ‹ô ‹ö ‹õ ‹ù ‹ü ‹† ‹° ‹¢ ‹£ ‹• ‹¶ ‹® ‹© ‹™ ‹´ ‹¨</span> ¬∑¬∑¬∑ <span class="charinsert Syrc">‹Ä</span> ¬∑¬∑¬∑ <b>Vowels</b>: <span class="charinsert Syrc">¬†‹∞</span> <span class="charinsert Syrc">¬†‹≥</span> <span class="charinsert Syrc">¬†‹∂</span> <span class="charinsert Syrc">¬†‹∫</span> <span class="charinsert Syrc">¬†‹Ω</span>
</p>
<p class="speciallang" id="edittools-Thai" style="display:none">
<span class="charinsert Thai">‡∏Å ‡∏Ç ‡∏É ‡∏Ñ ‡∏Ö ‡∏Ü ‡∏á ‡∏à ‡∏â ‡∏ä ‡∏ã ‡∏å ‡∏ç ‡∏é ‡∏è ‡∏ê ‡∏ë ‡∏í ‡∏ì ‡∏î ‡∏ï ‡∏ñ ‡∏ó ‡∏ò ‡∏ô ‡∏ö ‡∏õ ‡∏ú ‡∏ù ‡∏û ‡∏ü ‡∏† ‡∏° ‡∏¢ ‡∏£ ‡∏§ ‡∏• ‡∏¶ ‡∏ß ‡∏® ‡∏© ‡∏™ ‡∏´ ‡∏¨ ‡∏≠ ‡∏Æ ‡∏Ø</span> ¬∑¬∑¬∑
<span class="charinsert Thai">‡∏∞ ¬† ‡∏± ‡∏≤ ¬† ‡∏≥ ¬† ‡∏¥ ¬† ‡∏µ ¬† ‡∏∂ ¬† ‡∏∑ ¬†  ¬†‡∏∏ ¬†  ¬†‡∏π ¬†  ¬†‡∏∫ ‡πÄ ‡πÅ ‡πÇ ‡πÉ ‡πÑ ‡πÖ ‡πÜ</span> ‚Ä¢‚Ä¢‚Ä¢
<span class="charinsert Thai"> ¬†‡πà ¬†  ¬†‡πâ ¬†  ¬†‡πä ¬†  ¬†‡πã</span> ‚Ä¢‚Ä¢‚Ä¢
<span class="charinsert Thai">‡πê ‡πë ‡πí ‡πì ‡πî ‡πï ‡πñ ‡πó ‡πò ‡πô</span> ¬∑¬∑¬∑
</p>
<p class="speciallang" id="edittools-Tifinagh" style="display:none">
<span class="charinsert Tfng">‚¥∞ ‚¥± ‚¥≤ ‚¥≥ ‚¥¥ ‚¥µ ‚¥∂ ‚¥∑ ‚¥∏ ‚¥π ‚¥∫ ‚¥ª ‚¥º ‚¥Ω ‚¥ø ‚µÄ ‚µÅ ‚µÉ ‚µÑ ‚µÖ ‚µá ‚µâ ‚µä ‚µã ‚µç ‚µé ‚µè ‚µí ‚µì ‚µî ‚µï ‚µñ ‚µò ‚µô ‚µö ‚µõ ‚µú ‚µù ‚µû ‚µü ‚µ† ‚µ° ‚µ¢ ‚µ£ ‚µ§ ‚µ• ‚µØ</span> ¬∑¬∑¬∑ <b>Tuareg</b>:<span class="charinsert Tfng"> ‚¥æ ‚µÄ ‚µÇ ‚µÜ ‚µà ‚µå ‚µê ‚µë ‚µì ‚µó</span>
</p>
<p class="specialbasic" id="edittools-Vietnamese"><span class="charinsert">√Ä √† ·∫¢ ·∫£ √É √£ √Å √° ·∫† ·∫° ƒÇ ƒÉ ·∫∞ ·∫± ·∫≤ ·∫≥ ·∫¥ ·∫µ ·∫Æ ·∫Ø ·∫∂ ·∫∑ √Ç √¢ ·∫¶ ·∫ß ·∫® ·∫© ·∫™ ·∫´ ·∫§ ·∫• ·∫¨ ·∫≠ ƒê ƒë √à √® ·∫∫ ·∫ª ·∫º ·∫Ω √â √© ·∫∏ ·∫π √ä √™ ·ªÄ ·ªÅ ·ªÇ ·ªÉ ·ªÑ ·ªÖ ·∫æ ·∫ø ·ªÜ ·ªá √å √¨ ·ªà ·ªâ ƒ® ƒ© √ç √≠ ·ªä ·ªã √í √≤ ·ªé ·ªè √ï √µ √ì √≥ ·ªå ·ªç √î √¥ ·ªí ·ªì ·ªî ·ªï ·ªñ ·ªó ·ªê ·ªë ·ªò ·ªô ∆† ∆° ·ªú ·ªù ·ªû ·ªü ·ª† ·ª° ·ªö ·ªõ ·ª¢ ·ª£ √ô √π ·ª¶ ·ªß ≈® ≈© √ö √∫ ·ª§ ·ª• ∆Ø ∆∞ ·ª™ ·ª´ ·ª¨ ·ª≠ ·ªÆ ·ªØ ·ª® ·ª© ·ª∞ ·ª± ·ª≤ ·ª≥ ·ª∂ ·ª∑ ·ª∏ ·ªπ √ù √Ω ·ª¥ ·ªµ</span>
</span>
</p>
<p class="speciallang" id="edittools-Zhuyin_Fuhao" style="display:none">
<b>Zhuyin</b>: <span class="charinsert Hani">„ÑÖ „ÑÜ „Ñá „Ñà „Ñâ „Ñä „Ñã „Ñå „Ñç „Ñé „Ñè „Ñê „Ñë „Ñí „Ñì „Ñî „Ñï „Ññ „Ñó „Ñò „Ñô „Ñö „Ñõ „Ñú „Ñù „Ñû „Ñü „Ñ† „Ñ° „Ñ¢ „Ñ£ „Ñ§ „Ñ• „Ñ¶ „Ñß „Ñ® „Ñ© „Ñ™ „Ñ´ „Ñ¨</span>
</p>
</div>
</div><div id="mw-scribunto-console"></div>
<div class="templatesUsed"><div class="mw-templatesUsedExplanation"><p>Templates used on this page:
</p></div><ul>
<li><a href="/wiki/Template:documentation" title="Template:documentation">Template:documentation</a> (<a href="/w/index.php?title=Template:documentation&amp;action=edit" title="Template:documentation">view source</a>) (protected)</li><li><a href="/wiki/Template:documentation_needed" title="Template:documentation needed">Template:documentation needed</a> (<a href="/w/index.php?title=Template:documentation_needed&amp;action=edit" title="Template:documentation needed">edit</a>) </li><li><a href="/wiki/Template:maintenance_box" title="Template:maintenance box">Template:maintenance box</a> (<a href="/w/index.php?title=Template:maintenance_box&amp;action=edit" title="Template:maintenance box">view source</a>) (protected)</li><li><a href="/wiki/Module:documentation" title="Module:documentation">Module:documentation</a> (<a href="/w/index.php?title=Module:documentation&amp;action=edit" title="Module:documentation">view source</a>) (semi-protected)</li><li><a href="/wiki/Module:ru-noun/documentation" title="Module:ru-noun/documentation">Module:ru-noun/documentation</a> (<a href="/w/index.php?title=Module:ru-noun/documentation&amp;action=edit" title="Module:ru-noun/documentation">edit</a>) </li></ul></div><div class="hiddencats"></div><div class="limitreport"></div><input type="hidden" value="1" name="wpUltimateParam" />
</form>
<noscript><img src="//en.wiktionary.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wiktionary.org/wiki/Module:ru-noun">https://en.wiktionary.org/wiki/Module:ru-noun</a>"					</div>
				<div id='catlinks' class='catlinks catlinks-allhidden'></div>				<div class="visualClear"></div>
							</div>
		</div>
		<div id="mw-navigation">
			<h2>Navigation menu</h2>

			<div id="mw-head">
									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">
						<h3 id="p-personal-label">Personal tools</h3>
						<ul>
							<li id="pt-createaccount"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Module%3Aru-noun&amp;returntoquery=action%3Dedit&amp;type=signup" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Module%3Aru-noun&amp;returntoquery=action%3Dedit" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>						</ul>
					</div>
									<div id="left-navigation">
										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">
						<h3 id="p-namespaces-label">Namespaces</h3>
						<ul>
															<li  id="ca-nstab-module" class="selected"><span><a href="/wiki/Module:ru-noun"  title="[c]" accesskey="c">Module</a></span></li>
															<li  id="ca-talk"><span><a href="/wiki/Module_talk:ru-noun"  title="Discussion about the content page [t]" accesskey="t" rel="discussion">Discussion</a></span></li>
													</ul>
					</div>
										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">
												<h3 id="p-variants-label">
							<span>Variants</span><a href="#"></a>
						</h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
									</div>
				<div id="right-navigation">
										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">
						<h3 id="p-views-label">Views</h3>
						<ul>
															<li id="ca-view"><span><a href="/wiki/Module:ru-noun" >Read</a></span></li>
															<li id="ca-edit" class="selected"><span><a href="/w/index.php?title=Module:ru-noun&amp;action=edit"  title="Edit this page">Edit</a></span></li>
															<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Module:ru-noun&amp;action=history"  title="Past revisions of this page [h]" accesskey="h">History</a></span></li>
													</ul>
					</div>
										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">
						<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>

						<div class="menu">
							<ul>
															</ul>
						</div>
					</div>
										<div id="p-search" role="search">
						<h3>
							<label for="searchInput">Search</label>
						</h3>

						<form action="/w/index.php" id="searchform">
							<div id="simpleSearch">
							<input type="search" name="search" placeholder="Search" title="Search Wiktionary [f]" accesskey="f" id="searchInput" /><input type="hidden" value="Special:Search" name="title" /><input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton" /><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton" />							</div>
						</form>
					</div>
									</div>
			</div>
			<div id="mw-panel">
				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Wiktionary:Main_Page"  title="Visit the main page"></a></div>
						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>
			<h3 id='p-navigation-label'>Navigation</h3>

			<div class="body">
									<ul>
						<li id="n-mainpage-text"><a href="/wiki/Wiktionary:Main_Page">Main Page</a></li><li id="n-portal"><a href="/wiki/Wiktionary:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-wiktprefs"><a href="/wiki/Wiktionary:Per-browser_preferences">Preferences</a></li><li id="n-requestedarticles"><a href="/wiki/Wiktionary:Requested_entries">Requested entries</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random entry</a></li><li id="n-help"><a href="https://en.wiktionary.org/wiki/Help:Contents" title="The place to find out">Help</a></li><li id="n-sitesupport"><a href="//donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wiktionary.org&amp;uselang=en" title="Support us">Donations</a></li><li id="n-contact"><a href="/wiki/Wiktionary:Contact_us">Contact us</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>
			<h3 id='p-tb-label'>Tools</h3>

			<div class="body">
									<ul>
						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Module:ru-noun" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Module:ru-noun" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="//commons.wikimedia.org/wiki/Special:UploadWizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-info"><a href="/w/index.php?title=Module:ru-noun&amp;action=info" title="More information about this page">Page information</a></li>					</ul>
							</div>
		</div>
			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>
			<h3 id='p-lang-label'>In other languages</h3>

			<div class="body">
									<ul>
						<li class="uls-p-lang-dummy"><a href="#"></a></li>					</ul>
							</div>
		</div>
				</div>
		</div>
		<div id="footer" role="contentinfo">
							<ul id="footer-places">
											<li id="footer-places-privacy"><a href="//wikimediafoundation.org/wiki/Privacy_policy" title="wikimedia:Privacy policy">Privacy policy</a></li>
											<li id="footer-places-about"><a href="/wiki/Wiktionary:About" title="Wiktionary:About">About¬†Wiktionary</a></li>
											<li id="footer-places-disclaimer"><a href="/wiki/Wiktionary:General_disclaimer" title="Wiktionary:General disclaimer">Disclaimers</a></li>
											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
											<li id="footer-places-mobileview"><a href="//en.m.wiktionary.org/w/index.php?title=Module:ru-noun&amp;action=edit&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>
									</ul>
										<ul id="footer-icons" class="noprint">
											<li id="footer-copyrightico">
							<a href="//wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>
											<li id="footer-poweredbyico">
							<a href="//www.mediawiki.org/"><img src="https://en.wiktionary.org/static/1.26wmf19/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="https://en.wiktionary.org/static/1.26wmf19/resources/assets/poweredby_mediawiki_132x47.png 1.5x, https://en.wiktionary.org/static/1.26wmf19/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" /></a>						</li>
									</ul>
						<div style="clear:both"></div>
		</div>
		<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.loader.state({"ext.globalCssJs.site":"ready","ext.globalCssJs.user":"ready","user":"ready","user.groups":"ready"});
} );</script>
<link rel="stylesheet" href="https://en.wiktionary.org/w/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.BlockInfo%2CCodeLinks%2CDocTabs%2CJavascriptHeadings%2CLegacyScripts%2CRevdelInfo&amp;only=styles&amp;skin=vector&amp;*" />
<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.loader.load(["ext.codeEditor","mediawiki.action.edit.editWarning","mediawiki.action.edit.stash","ext.math.editbutton.enabler","ext.scribunto.edit","ext.TemplateSandbox","mediawiki.action.edit.collapsibleFooter","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.cirrusSearch.loggingSchema","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.wikimediaEvents.statsd","ext.wikimediaEvents.geoFeatures","ext.navigationTiming","ext.gadget.LegacyScripts","ext.gadget.JavascriptHeadings","ext.gadget.DocTabs","ext.gadget.BlockInfo","ext.gadget.RevdelInfo","ext.gadget.CodeLinks","schema.UniversalLanguageSelector","ext.uls.eventlogger","ext.uls.interlanguage"]);
} );</script>
<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.loader.using("mediawiki.toolbar", function () {mw.toolbar.addButton(false,"Bold text","'''","'''","{{subst:ru-noun}}","mw-editbutton-bold");mw.toolbar.addButton(false,"Italic text","''","''","[[]]","mw-editbutton-italic");mw.toolbar.addButton(false,"Internal link","[[","]]","#English|{{subst:PAGENAME}}","mw-editbutton-link");mw.toolbar.addButton(false,"External link (remember http:// prefix)","[","]","http://","mw-editbutton-extlink");mw.toolbar.addButton(false,"Level 2 headline","\n== "," ==\n","English","mw-editbutton-headline");mw.toolbar.addButton(false,"Embedded file","[[File:","]]","Example.jpg|thumb|A ''''''","mw-editbutton-image");mw.toolbar.addButton(false,"File link","[[Media:","]]","Example.ogg","mw-editbutton-media");mw.toolbar.addButton(false,"Ignore wiki formatting","\u003Cnowiki\u003E","\u003C/nowiki\u003E","{{}}","mw-editbutton-nowiki");mw.toolbar.addButton(false,"Horizontal line (use sparingly)","\n----\n","","","mw-editbutton-hr");});
} );</script>
<script>window.RLQ = window.RLQ || []; window.RLQ.push( function () {
mw.config.set({"wgBackendResponseTime":180,"wgHostname":"mw1066"});
} );</script>
	</body>
</html>
